<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>操作系统实验（二）</title>
      <link href="/2023/11/11/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E9%AA%8C%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/11/11/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E9%AA%8C%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-实验目标"><a href="#1-实验目标" class="headerlink" title="1 实验目标"></a><strong>1</strong> <strong>实验目标</strong></h2><p>1、理解进程的概念</p><p>2、掌握创建进程并能理解子进程和父进程的交互关系</p><p>3、掌握进程的状态转换</p><h2 id="2-实验工具"><a href="#2-实验工具" class="headerlink" title="2 实验工具"></a><strong>2</strong> <strong>实验工具</strong></h2><p>(1) 硬件环境: AMD Ryzen 7 5800H with Radeon Graphics</p><p>(2) 软件环境: VMware 16.0、Ubuntu 18.04.6</p><h2 id="3-实验内容"><a href="#3-实验内容" class="headerlink" title="3 实验内容"></a><strong>3</strong> <strong>实验内容</strong></h2><h4 id="实验步骤及实验结果"><a href="#实验步骤及实验结果" class="headerlink" title="实验步骤及实验结果"></a>实验步骤及实验结果</h4><p><strong>一、自定义操作系统并启动</strong></p><h5 id="1、用系统调用fork-函数实现子进程的创建，熟悉进程创建的执行过程。"><a href="#1、用系统调用fork-函数实现子进程的创建，熟悉进程创建的执行过程。" class="headerlink" title="1、用系统调用fork()函数实现子进程的创建，熟悉进程创建的执行过程。"></a>1、用系统调用fork()函数实现子进程的创建，熟悉进程创建的执行过程。</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello,world (pid:%d)\n&quot;</span>,(<span class="type">int</span>) getpid());</span><br><span class="line"><span class="type">int</span> rc=fork();</span><br><span class="line">       <span class="keyword">if</span>(rc&lt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">&quot;fork failed\n&quot;</span>); </span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(rc==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello,I am child (pid:%d)\n&quot;</span>,(<span class="type">int</span>) getpid());&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello, I am Parent of %d (pid:%d)\n&quot;</span>,rc,(<span class="type">int</span>) getpid());&#125;&#125;</span><br></pre></td></tr></table></figure><p>​                               <img src="https://s2.loli.net/2023/11/12/dHsOmq9Q8AcD3Ey.png" alt="image-20231111234806303"></p><p>【思考题：分析并运行以下程序，运行结果截图，并说明程序结果是否唯一，为什么？】</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">结果不唯一，因为他们是并发执行，输出的顺序不唯一，在父进程中,fork()函数返回子进程的PID（3939），所以程序打印&quot;hello, I am Parent of 3939 (pid:3938)&quot;</span><br><span class="line"></span><br><span class="line">在子进程中，fork函数返回的为0，所以打印的是“hello,I am child(pid:3939)”</span><br></pre></td></tr></table></figure><h5 id="2、用系统调用wait-函数对上述程序进行修改，实现父进程等待子进程执行完毕后再执行。"><a href="#2、用系统调用wait-函数对上述程序进行修改，实现父进程等待子进程执行完毕后再执行。" class="headerlink" title="2、用系统调用wait()函数对上述程序进行修改，实现父进程等待子进程执行完毕后再执行。"></a>2、用系统调用wait()函数对上述程序进行修改，实现父进程等待子进程执行完毕后再执行。</h5><p>【给出修改后的代码及说明，并分析运行结果】</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello, world (pid: %d)\n&quot;</span>, (<span class="type">int</span>)getpid());</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> rc = fork();</span><br><span class="line">    <span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;fork failed\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rc == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello, I am child (pid: %d)\n&quot;</span>, (<span class="type">int</span>)getpid());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> status;</span><br><span class="line">        <span class="comment">// 等待子进程执行完毕</span></span><br><span class="line">        wait(&amp;status);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello, I am Parent of %d (pid: %d)\n&quot;</span>, rc, (<span class="type">int</span>)getpid());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <img src="https://s2.loli.net/2023/11/12/fnP6asBwmydH32Q.png" alt="image-20231111234821836"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">运行结果和之前不同，之前是父进程和子进程是并发执行，运行结果不分前后</span><br><span class="line"></span><br><span class="line">加了wait（）之后一定是子进程先执行完毕 输出“hello,I am child”,然后父进程才结束执行</span><br></pre></td></tr></table></figure><h5 id="3、用系统调用exec类函数对上述程序进行修改，实现父进程等待子进程运行，子进程执行新的任务，例如查看当前进程等等。"><a href="#3、用系统调用exec类函数对上述程序进行修改，实现父进程等待子进程运行，子进程执行新的任务，例如查看当前进程等等。" class="headerlink" title="3、用系统调用exec类函数对上述程序进行修改，实现父进程等待子进程运行，子进程执行新的任务，例如查看当前进程等等。"></a>3、用系统调用exec类函数对上述程序进行修改，实现父进程等待子进程运行，子进程执行新的任务，例如查看当前进程等等。</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello, world (pid: %d)\n&quot;</span>, (<span class="type">int</span>)getpid());</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> rc = fork();</span><br><span class="line">    <span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;fork failed\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rc == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello, I am child (pid: %d)\n&quot;</span>, (<span class="type">int</span>)getpid());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查看当前进程</span></span><br><span class="line">        execlp(<span class="string">&quot;ps&quot;</span>, <span class="string">&quot;ps&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// exec函数执行失败</span></span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;exec failed\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> status;</span><br><span class="line">        wait(&amp;status);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello, I am Parent of %d (pid: %d)\n&quot;</span>, rc, (<span class="type">int</span>)getpid());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/11/12/MLwd2ufRBneYqFI.png" alt="image-20231111234838519"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在子进程里面添加execlp函数，使子进程执行ls命令</span><br><span class="line"></span><br><span class="line">子进程先输出“hello，I am child”语句</span><br><span class="line"></span><br><span class="line">当execlp执行成功是，会将子进程的所有代码改为执行命令的代码</span><br><span class="line"></span><br><span class="line">如果execlp执行失败，则会输出“exec failed”语句</span><br><span class="line"></span><br><span class="line">父进程仍使用wait函数等待子进程执行结束再输出“hello ，I am parent ”语句</span><br></pre></td></tr></table></figure><p>【给出修改后的代码及说明，并分析运行结果】</p><h5 id="4、编写程序，实现进程的管理功能。能够实现创建进程、查看正在运行的进程、切换某个进程、结束进程以及唤醒进程的功能。"><a href="#4、编写程序，实现进程的管理功能。能够实现创建进程、查看正在运行的进程、切换某个进程、结束进程以及唤醒进程的功能。" class="headerlink" title="4、编写程序，实现进程的管理功能。能够实现创建进程、查看正在运行的进程、切换某个进程、结束进程以及唤醒进程的功能。"></a>4、编写程序，实现进程的管理功能。能够实现创建进程、查看正在运行的进程、切换某个进程、结束进程以及唤醒进程的功能。</h5><p>设计思路：</p><p>编写一个进程结构体，结构体内有进程号，进程是否运行，然后创建功能函数，实现进程的创建，查看，切换，结束等</p><p>在main函数里通过while循环里添加switch语句判断用户选项，后进行函数调用，直至用户输入结束进程的选项</p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义进程结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">pid_t</span> pid;      <span class="comment">// 进程ID</span></span><br><span class="line">    <span class="type">int</span> actpid;     <span class="comment">// 进程是否处于活动状态</span></span><br><span class="line">&#125; Process;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">createp</span><span class="params">(Process* p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">pid_t</span> pid = fork();</span><br><span class="line">    <span class="keyword">if</span> (pid &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;fork failed\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 子进程代码</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Child p (pid: %d) has been created.\n&quot;</span>, getpid());</span><br><span class="line">        sleep(<span class="number">5</span>); <span class="comment">// 模拟子进程的工作</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Child p (pid: %d) has finished its work.\n&quot;</span>, getpid());</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 父进程代码</span></span><br><span class="line">        p-&gt;pid = pid;</span><br><span class="line">        p-&gt;actpid = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Parent p (pid: %d) has created a child p (pid: %d).\n&quot;</span>, getpid(), pid);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查看正在运行的进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">viewp</span><span class="params">(Process* p, <span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Running p:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i].actpid) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d (pid: %d) is running.\n&quot;</span>, i+<span class="number">1</span>, p[i].pid);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 切换进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">switchp</span><span class="params">(Process* p, <span class="type">int</span> num, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt; num) &#123;</span><br><span class="line">        Process* target = &amp;p[index];</span><br><span class="line">        <span class="keyword">if</span> (target-&gt;actpid) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Switching to p %d (pid: %d).\n&quot;</span>, index+<span class="number">1</span>, target-&gt;pid);</span><br><span class="line">            waitpid(target-&gt;pid, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d (pid: %d) has finished.\n&quot;</span>, index+<span class="number">1</span>, target-&gt;pid);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d is not actpid.\n&quot;</span>, index+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid p index.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结束进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">endp</span><span class="params">(Process* p, <span class="type">int</span> num, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt; num) &#123;</span><br><span class="line">        Process* target = &amp;p[index];</span><br><span class="line">        <span class="keyword">if</span> (target-&gt;actpid) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Ending p %d (pid: %d).\n&quot;</span>, index+<span class="number">1</span>, target-&gt;pid);</span><br><span class="line">            kill(target-&gt;pid, SIGTERM);</span><br><span class="line">            waitpid(target-&gt;pid, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">            target-&gt;actpid = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d (pid: %d) has been ended.\n&quot;</span>, index+<span class="number">1</span>, target-&gt;pid);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d is not actpid.\n&quot;</span>, index+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid p index.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 唤醒进程</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">wakep</span><span class="params">(Process* p, <span class="type">int</span> num, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt; num) &#123;</span><br><span class="line">        Process* target = &amp;p[index];</span><br><span class="line">        <span class="keyword">if</span> (!target-&gt;actpid) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Waking up p %d.\n&quot;</span>, index+<span class="number">1</span>);</span><br><span class="line">            createp(target);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Process %d is already actpid.\n&quot;</span>, index+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid p index.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> max = <span class="number">5</span>;  <span class="comment">// 最大进程数</span></span><br><span class="line">    Process p[max];  <span class="comment">// 进程数组</span></span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;  <span class="comment">// 当前进程数</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> choice;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="comment">// 显示菜单</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nProcess Management Menu:\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1. Create Process\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;2. View Running p\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;3. Switch Process\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;4. End Process\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;5. Wake up Process\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0. Exit\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter your choice: &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line">        <span class="comment">//判断输入选项</span></span><br><span class="line">        <span class="keyword">switch</span> (choice)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                   <span class="keyword">if</span>(num&lt;max)&#123;<span class="comment">//如果大于最大进程则不再创建</span></span><br><span class="line">                    createp(&amp;p[num]);</span><br><span class="line">                    num++;</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;process reachs max num&quot;</span>);</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            viewp(p,num);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//调换进程</span></span><br><span class="line">                <span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> index;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;enter index you want to switch：&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;index);</span><br><span class="line">                switchp(p,num,index<span class="number">-1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;the process is empty&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:<span class="comment">//end进程</span></span><br><span class="line">                <span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> index;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;enter index you want to end：&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;index);</span><br><span class="line">                endp(p,num,index<span class="number">-1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;the process is empty&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//唤醒进程</span></span><br><span class="line">                <span class="keyword">if</span>(num&lt;max)&#123;</span><br><span class="line">                    <span class="type">int</span> index;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;enter index you want to wake：&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;index);</span><br><span class="line">                wakep(p,num,index<span class="number">-1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;the process is full&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:<span class="comment">//退出程序</span></span><br><span class="line">                 <span class="built_in">printf</span>(<span class="string">&quot;exit the process&quot;</span>);</span><br><span class="line">                 <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;num;i++)</span><br><span class="line">                    endp(p,num,i);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">default</span>:<span class="comment">//重新选择</span></span><br><span class="line">                 <span class="built_in">printf</span>(<span class="string">&quot;what you enter is error,please put again&quot;</span>);</span><br><span class="line">        &#125; &#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>程序功能测试：</p><p>1：创建进程</p><p> <img src="https://s2.loli.net/2023/11/12/nmCtRFGVUBHWA8h.png" alt="image-20231111234900636"></p><p>图表 8程序功能测试</p><p>2：显示进程</p><p> <img src="https://s2.loli.net/2023/11/12/dOPVD571nQbJHrC.png" alt="image-20231111234904463"></p><p>3：调换进程</p><p> <img src="https://s2.loli.net/2023/11/12/apeImbYHB4tldWM.png" alt="image-20231111234909922"></p><p>4：结束进程</p><p>  <img src="https://s2.loli.net/2023/11/12/MbFerfpYUglnwz7.png" alt="image-20231111234924453"></p><p>5：唤醒进程</p><p> <img src="https://s2.loli.net/2023/11/12/ATDROPelr5nwaiE.png" alt="image-20231111234932351"></p><p>6：结束程序</p><p><img src="https://s2.loli.net/2023/11/12/uUKxaCsHDjzgA9L.png" alt="image-20231111234955881"></p><h2 id="4-实验总结"><a href="#4-实验总结" class="headerlink" title="4 实验总结"></a><strong>4</strong> <strong>实验总结</strong></h2><p><strong>Q1****：在进行子进程执行查看当前进程时，”hello,I am child”语句不显示</strong></p><p>上网查找后发现执行execlp函数后会把命令的程序覆盖子进程代码，所以将“hello，I am child“语句放在execlp函数之前即可显示</p><p><strong>Q1****：编写第三题程序时出现好几处错误</strong></p><p> <img src="https://s2.loli.net/2023/11/12/7MglUF5ncHa9vpA.png" alt="image-20231111235005810"></p><p><img src="https://s2.loli.net/2023/11/12/7bingrC8lowPtdF.png" alt="image-20231111235010179"></p><p>后经过调试解决</p><p>通过此次实验，将操作系统的进程和大一所学的C语言大作业结合了起来，知识之间有了关联，印象更加深刻</p><p>通过几个任务进一步了解了进程的知识</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/11/08/Android%E5%BC%80%E5%8F%91-%E7%B1%BB%E5%BE%AE%E4%BF%A1%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/11/08/Android%E5%BC%80%E5%8F%91-%E7%B1%BB%E5%BE%AE%E4%BF%A1%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<hr><p>title: Android开发-类微信界面设计（一）<br>date: 2023-10-27 12:57:36<br>categories:</p><ul><li>安卓开发</li></ul><p>tags: </p><ul><li>安卓</li><li>学习</li></ul><hr><h1 id="Android开发-类微信界面设计（一）"><a href="#Android开发-类微信界面设计（一）" class="headerlink" title="Android开发-类微信界面设计（一）"></a>Android开发-类微信界面设计（一）</h1><h2 id="一、实现效果图如下："><a href="#一、实现效果图如下：" class="headerlink" title="一、实现效果图如下："></a>一、实现效果图如下：</h2><p><img src="https://s2.loli.net/2023/11/10/ef9xXPBC1iQmEgo.png" alt="image-20231014171856284"></p><p><img src="https://gitee.com/jardny/typora_images/raw/master/images/%E5%8A%A8%E7%94%BB.gif" alt="动画"></p><h2 id="二、功能说明："><a href="#二、功能说明：" class="headerlink" title="二、功能说明："></a>二、功能说明：</h2><p>设计一个类微信的主界面UI，有&#x3D;&#x3D;上中下&#x3D;&#x3D;三个结构，包含&#x3D;&#x3D;四个界面&#x3D;&#x3D;：聊天、联系人、位置、设置，并且实现&#x3D;&#x3D;点击下方进行界面跳转&#x3D;&#x3D;，并且在其中一个tab界面&#x3D;&#x3D;显示列表效果&#x3D;&#x3D;</p><h2 id="三、知识点简单介绍"><a href="#三、知识点简单介绍" class="headerlink" title="三、知识点简单介绍"></a>三、知识点简单介绍</h2><p>在Android开发中，<strong>XML文件</strong>和<strong>Java文件</strong>是两种主要的文件类型，用于定义和控制应用程序的布局、界面和功能。</p><blockquote><p> <font color="red">xml文件</font></p></blockquote><p>XML文件用于定义应用程序的布局和界面。简单来说就是你能看到的效果图均是由它构成，相当于前端</p><blockquote><p><font color="red">java文件</font></p></blockquote><p>Java文件是应用程序的逻辑和功能的实现。就是后端</p><h2 id="四、实现说明"><a href="#四、实现说明" class="headerlink" title="四、实现说明"></a>四、实现说明</h2><h3 id="上中下三个结构"><a href="#上中下三个结构" class="headerlink" title="上中下三个结构"></a>上中下三个结构</h3><p><img src="https://s2.loli.net/2023/11/10/awMb7516ecJd8kt.png" alt="image-20231014174546111"></p><p>观察可以很明显发现效果图布局为<font color="red">上中下</font>，那么显示就需要在一个主xml（<code>main.xml</code>）上把三个xml显示出来（分别负责上中下）<code>bottom.xml</code>、<code>top.xml</code>、<code>中间显示的xml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">由于中间有四个界面需要显示 所以再命名为tab1.xml，tab2.xml，tab3.xml，tab4.xml</span><br></pre></td></tr></table></figure><h4 id="main（主界面）"><a href="#main（主界面）" class="headerlink" title="main（主界面）"></a>main（主界面）</h4><p>需要把三个部分的xml文件全部压入main.xml中</p><p><img src="https://s2.loli.net/2023/11/10/zpK4WQimqLChTHo.png" alt="image-20231014184607181"></p><p>用include包含上中下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/top&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/bottom&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="top"><a href="#top" class="headerlink" title="top"></a>top</h4><h5 id="效果"><a href="#效果" class="headerlink" title="&#x3D;&#x3D;效果&#x3D;&#x3D;"></a>&#x3D;&#x3D;效果&#x3D;&#x3D;</h5><p><img src="https://s2.loli.net/2023/11/10/pJCHRozM4KNvEIj.png" alt="image-20231014180046346"></p><p>很明显就一个位置在<font color="red">top</font>的<font color="red">文字</font></p><p>故在xml里添加一个textView组件就行</p><p><img src="https://s2.loli.net/2023/11/10/Djrw9KPthTbuWfs.png" alt="image-20231014180717335"></p><h5 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;815dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:shadowColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;微信&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span> /&gt;</span>  <span class="comment">&lt;!----&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="content（四个tab）"><a href="#content（四个tab）" class="headerlink" title="content（四个tab）"></a>content（四个tab）</h4><h5 id="效果-1"><a href="#效果-1" class="headerlink" title="&#x3D;&#x3D;效果&#x3D;&#x3D;"></a>&#x3D;&#x3D;效果&#x3D;&#x3D;</h5><p><img src="https://s2.loli.net/2023/11/10/4VpTO2N3RMZdnjy.png" alt="image-20231014175643889"></p><p>每个都类似，此处说明一个</p><p>&#x3D;&#x3D;tab2：&#x3D;&#x3D;</p><p><img src="https://s2.loli.net/2023/11/10/7pq5ijOT4W6rFM1.png" alt="image-20231014181951597"></p><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView8&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;这是联系人界面&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="bottom"><a href="#bottom" class="headerlink" title="bottom"></a>bottom</h4><h5 id="bottom效果-："><a href="#bottom效果-：" class="headerlink" title="&#x3D;&#x3D;bottom效果&#x3D;&#x3D;："></a>&#x3D;&#x3D;bottom效果&#x3D;&#x3D;：</h5><p><img src="https://gitee.com/jardny/typora_images/raw/master/images/image-20231014175932468.png" alt="image-20231014175932468"></p><p>看出有4个图像 4个文字，一个图像和一个文字是<font color="red">一对</font>的，<font color="red">4对</font>是<font color="red">横着排列</font></p><p>故布局如下：</p><p><img src="https://s2.loli.net/2023/11/10/CYLzq1dWktrvS53.png" alt="image-20231014182614921"></p><h5 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/LinearLayout1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageView11&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:adjustViewBounds</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">app:srcCompat</span>=<span class="string">&quot;@drawable/xiaoxi&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView11&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;聊天&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/LinearLayout2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageView22&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:adjustViewBounds</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:srcCompat</span>=<span class="string">&quot;@drawable/lianxiren&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView22&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:shadowColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;联系人&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/LinearLayout3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageView33&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:adjustViewBounds</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:srcCompat</span>=<span class="string">&quot;@drawable/shouye&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView33&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:shadowColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;位置&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/LinearLayout4&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageView44&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:adjustViewBounds</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:srcCompat</span>=<span class="string">&quot;@drawable/shezhi&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView44&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:shadowColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;设置&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color="red">注意！！</font></p><p>自定义的imag要放在drawable目录下并且在LinearLayout进行引用说明</p><p><img src="https://s2.loli.net/2023/11/10/61aD2WuYwUpy9OS.png" alt="image-20231014190744626"></p><h3 id="点击4个页面跳转功能"><a href="#点击4个页面跳转功能" class="headerlink" title="点击4个页面跳转功能"></a>点击4个页面跳转功能</h3><p>这个涉及到后端接口所以在java中实现</p><h4 id="1-首先把java文件frament1-java与tab1-xml进行连接"><a href="#1-首先把java文件frament1-java与tab1-xml进行连接" class="headerlink" title="1.首先把java文件frament1.java与tab1.xml进行连接"></a>1.首先把java文件frament1.java与tab1.xml进行连接</h4><p>（fragment作为中间桥梁达到main函数可以调用xml的效果）</p><p><font color="red">故每个fragment都会连接到对应的tab</font></p><p><img src="https://s2.loli.net/2023/11/10/NiaA1vyHIqOGoX7.png" alt="image-20231014184129928"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Fragment2</span> <span class="keyword">extends</span> <span class="title class_">Fragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span><br><span class="line"><span class="params">                             Bundle savedInstanceState)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.tab2, container, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-桥梁搭好之后在main函数功能实现具体的操作"><a href="#2-桥梁搭好之后在main函数功能实现具体的操作" class="headerlink" title="2.桥梁搭好之后在main函数功能实现具体的操作"></a>2.桥梁搭好之后在main函数功能实现具体的操作</h4><h5 id="1-初始化"><a href="#1-初始化" class="headerlink" title="(1)初始化"></a>(1)初始化</h5><p>把4个fragment（tab页面）压入content里面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initial</span><span class="params">()</span> &#123;<span class="comment">//压入content</span></span><br><span class="line">    FragmentTransaction ft=fm.beginTransaction()<span class="comment">//事物 管理交互动作</span></span><br><span class="line">            .add(R.id.content,fragment1)</span><br><span class="line">            .add(R.id.content,fragment2)</span><br><span class="line">            .add(R.id.content,fragment3)</span><br><span class="line">            .add(R.id.content,fragment4);</span><br><span class="line">    ft.commit();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-显示当前页面"><a href="#2-显示当前页面" class="headerlink" title="(2)显示当前页面"></a>(2)显示当前页面</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">fragmentshow</span><span class="params">(Fragment fragment)</span> &#123;</span><br><span class="line">     FragmentTransaction ft=fm.beginTransaction()</span><br><span class="line">             .show(fragment);</span><br><span class="line">     ft.commit();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="3-实现点击监听功能"><a href="#3-实现点击监听功能" class="headerlink" title="(3)实现点击监听功能"></a>(3)实现点击监听功能</h5><p><font color="red">注意！！</font></p><p><font color="red">switch和if语句都可以实现 </font></p><p>如果版本不允许的话（比如我）就可以用if语句实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(view.getId())&#123;</span><br><span class="line">           <span class="keyword">case</span> R.id.LinearLayout1:fragmentshow(fragment1);<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> R.id.LinearLayout2:fragmentshow(fragment2);<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> R.id.LinearLayout3:fragmentshow(fragment3);<span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> R.id.LinearLayout4:fragmentshow(fragment4);<span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">    fragmenthide();</span><br><span class="line">    <span class="keyword">if</span> (view.getId()==R.id.LinearLayout1)&#123;</span><br><span class="line">        fragmentshow(fragment1);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (view.getId()==R.id.LinearLayout2)&#123;</span><br><span class="line">        fragmentshow(fragment2);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (view.getId()==R.id.LinearLayout3)&#123;</span><br><span class="line">        fragmentshow(fragment3);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(view.getId()==R.id.LinearLayout4)&#123;</span><br><span class="line">        fragmentshow(fragment4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="4-实现页面隐藏功能"><a href="#4-实现页面隐藏功能" class="headerlink" title="(4)实现页面隐藏功能"></a>(4)实现页面隐藏功能</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">fragmenthide</span><span class="params">()</span> &#123;<span class="comment">//藏起来</span></span><br><span class="line">        FragmentTransaction ft=fm.beginTransaction()</span><br><span class="line">                .hide(fragment1)</span><br><span class="line">                .hide(fragment2)</span><br><span class="line">                .hide(fragment3)</span><br><span class="line">                .hide(fragment4);</span><br><span class="line">        ft.commit();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="main函数操作"><a href="#main函数操作" class="headerlink" title="main函数操作"></a>main函数操作</h4><p>创建4个Fragment变量、1个管理对象FragmentManager变量 、4个LinearLayout变量对象</p><p>把LinearLayout实现与tab的图片文件进行<font color="red">初始化连接（get_id）</font></p><p>​                                                                      <font color="red">然后监听（setOnClicklistener）</font></p><p>然后进行全局初始化</p><p>把所有tab页面先藏起来</p><p>点到谁谁出来</p><p><img src="https://s2.loli.net/2023/11/10/qRnJap8SA4vwHDI.png" alt="image-20231014190312205"></p><h3 id="在tab中显示list功能"><a href="#在tab中显示list功能" class="headerlink" title="在tab中显示list功能"></a>在tab中显示list功能</h3><p>选择了tab1即聊天界面</p><p>需要用到RecycleView这个控件，在tab1.xml中加入，且创建一个item.xml（每一行的列表样式）</p><p><img src="https://s2.loli.net/2023/11/10/cA1zBvefWk2lQ4E.png" alt="image-20231014191256892"></p><p>也就是说你在tab1中加入的list样式，它的每一行其实是用item进行显示</p><p>然后创建<font color="red">Myadapter</font>类连接item（与之前<font color="red">Fragment</font>连接tab一样）</p><p>Fragment.java：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">view=inflater.inflate(R.layout.tab1,container,<span class="literal">false</span>);</span><br><span class="line">recyclerView=view.findViewById(R.id.recyclerview);<span class="comment">//连接至tab1的控件</span></span><br><span class="line">list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line">    list.add(<span class="string">&quot;这是第&quot;</span>+i+<span class="string">&quot;行数据&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">adapter=<span class="keyword">new</span> <span class="title class_">Myadapter</span>(view.getContext(),list);<span class="comment">//把list导入</span></span><br><span class="line">LinearLayoutManager manager=<span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(view.getContext());</span><br><span class="line">manager.setOrientation(LinearLayoutManager.VERTICAL);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br><span class="line">recyclerView.setLayoutManager(manager);</span><br><span class="line"><span class="comment">// Inflate the layout for this fragment</span></span><br><span class="line"><span class="keyword">return</span> view;</span><br></pre></td></tr></table></figure><p>主要作用是在Fragment的UI界面中展示一个列表视图（RecyclerView），并将数据源（List）提供给适配器（Adapter），以便进行数据的绑定和显示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LinearLayoutManager manager=new LinearLayoutManager(view.getContext());</span><br></pre></td></tr></table></figure><ul><li>创建了一个LinearLayoutManager对象，传入了view.getContext()的上下文参数。通过这个参数，LinearLayoutManager可以获取到包含该RecyclerView的Activity或Fragment的Context对象，并在该上下文中设置LinearLayoutManager的属性。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager.setOrientation(LinearLayoutManager.VERTICAL);</span><br></pre></td></tr></table></figure><ul><li>对这个布局做界面调整 要垂直的</li></ul><h4 id="Myadapter-java说明"><a href="#Myadapter-java说明" class="headerlink" title="Myadapter.java说明"></a>Myadapter.java说明</h4><blockquote><p> &#x3D;&#x3D;RecyclerView中的Myadapter&#x3D;&#x3D;</p></blockquote><p>是一个管理数据和视图之间关系的类</p><p>为RecyclerView提供数据并创建对应的视图项</p><p>Adapter通常继承自RecyclerView.Adapter类，并通过重写其中的方法来实现自定义逻辑。例如，常见的方法包括：</p><ul><li><code>onCreateViewHolder()</code>：用于创建ViewHolder对象，即每个Item对应的视图项。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> Myholder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line"></span><br><span class="line">        View view=LayoutInflater.from(context1).inflate(R.layout.item,parent,<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//布局的压缩</span></span><br><span class="line"><span class="comment">//        Inflater inflater=new Inflater();</span></span><br><span class="line"><span class="comment">//        inflater.inflate(); 真正的压缩</span></span><br><span class="line">        Myholder myholder=<span class="keyword">new</span> <span class="title class_">Myholder</span>(view);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> myholder;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>onBindViewHolder()</code>：用于将数据绑定到ViewHolder中的视图项上。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> Myholder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">  </span><br><span class="line">     holder.textView.setText(list1.get(position));<span class="comment">//用于设置TextView的文本内容为数据列表list1中指定位置的数据</span></span><br><span class="line">    </span><br><span class="line">     holder.textView.setTextColor(Color.RED); <span class="comment">// 将颜色设置为红色</span></span><br><span class="line">  </span><br><span class="line"> &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><code>getItemCount()</code>：返回数据集合的大小，即Item的数量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list1.size();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>定义一个名为<code>Myholder</code>的自定义<code>ViewHolder</code>类，它继承自<code>RecyclerView</code>的内部类<code>ViewHolder</code></p></li></ul><p>​     是用来表示每个数据项的视图项的，并且可以在需要时对其进行重用。ViewHolder通过保存视图项中的子视图     （例如TextView、ImageView等）的引用，以便在需要时快速地访问和更新视图内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Myholder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder&#123;</span><br><span class="line">    TextView textView;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Myholder</span><span class="params">(<span class="meta">@NonNull</span> View itemView)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(itemView);</span><br><span class="line">        textView=itemView.findViewById(R.id.textView1);<span class="comment">//引用item.xml里id为textView1的textView作为Myholder这个类中</span></span><br><span class="line">        <span class="comment">//textView对象的初始值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五、报错部分"><a href="#五、报错部分" class="headerlink" title="五、报错部分"></a>五、报错部分</h2><h3 id="1、error-‘-tools-sample-avatars’-is-incompatible-with-attribute-src-attr-referencelcolor"><a href="#1、error-‘-tools-sample-avatars’-is-incompatible-with-attribute-src-attr-referencelcolor" class="headerlink" title="1、error: ‘@tools:sample&#x2F;avatars’ is incompatible with attribute src (attr) referencelcolor."></a>1、error: ‘@tools:sample&#x2F;avatars’ is incompatible with attribute src (attr) referencelcolor.</h3><p><img src="https://s2.loli.net/2023/11/10/JcErvxd8BHolIyw.png" alt="image-20231009100556565"></p><p>用的是系统自带图片</p><p>自定义了2个src</p><p><strong>solve：</strong></p><p>把tools的那个删除</p><p>只留下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srcCompat：=&quot;@drawable/xiaoxi&quot;</span><br></pre></td></tr></table></figure><p>后面跟的是图片存放路径</p><h3 id="2：图片命名飘红"><a href="#2：图片命名飘红" class="headerlink" title="2：图片命名飘红"></a>2：图片命名飘红</h3><p><img src="https://s2.loli.net/2023/11/10/BbK2PqU4N8AVogf.png" alt="image-20231009091749232"></p><p>solve：</p><p>命名修改为英文的就行</p><h3 id="3：没报错但打开程序一直闪退"><a href="#3：没报错但打开程序一直闪退" class="headerlink" title="3：没报错但打开程序一直闪退"></a>3：没报错但打开程序一直闪退</h3><p>一开始也不知道怎么办，上网搜索后才发现要查看日志</p><p>运行不报错，但是日志会报错(get了)</p><p>查找日志方法：</p><p><img src="https://s2.loli.net/2023/11/10/HNLwjxZ5nDI7Y1k.png" alt="image-20231014194327863"></p><h3 id="4：Unable-to-instantiate-activity-ComponentInfo-com-example-demo-com-example-demo-MainActivity"><a href="#4：Unable-to-instantiate-activity-ComponentInfo-com-example-demo-com-example-demo-MainActivity" class="headerlink" title="4：Unable to instantiate activity ComponentInfo{com.example.demo&#x2F;com.example.demo.MainActivity}:"></a>4：Unable to instantiate activity ComponentInfo{com.example.demo&#x2F;com.example.demo.MainActivity}:</h3><p>说无法是实例化MainActivity</p><p><img src="https://s2.loli.net/2023/11/10/dyU82jiKQnaeSYv.png" alt="image-20231014194613213"></p><p>查看后发现我创建的时候不小心加了一个abstract</p><p><img src="https://gitee.com/jardny/typora_images/raw/master/images/image-20231014194647503.png" alt="image-20231014194647503"></p><p><font color="red">！！！</font>：abstract是抽象类，抽象类是不行进行实例化的</p><h3 id="5：-Attempt-to-invoke-virtual-method-‘void-android-widget-TextView-setText-java-lang-CharSequence-’"><a href="#5：-Attempt-to-invoke-virtual-method-‘void-android-widget-TextView-setText-java-lang-CharSequence-’" class="headerlink" title="5： Attempt to invoke virtual method ‘void android.widget.TextView.setText(java.lang.CharSequence)’"></a>5： Attempt to invoke virtual method ‘void android.widget.TextView.setText(java.lang.CharSequence)’</h3><p>意思是在代码中尝试<font color="red">对一个空对象进行操作</font>。具体来说，这个错误提示是因为在Myadapter.java文件的43行，尝试对一个TextView对象进行setText()方法的调用，但该TextView对象是null，即没有被正确地初始化或找到。</p><p>所以应该是getid的问题 没有正确的get到</p><p><img src="https://gitee.com/jardny/typora_images/raw/master/images/image-20231014194929174.png" alt="image-20231014194929174"></p><p>果然这里写错了</p><p>我的textView的id是textView1，但是我一开始写成立textView</p><p>而这个id是个空的</p><h3 id="6、要滑动才行，不是老师要求的显示在一个界面"><a href="#6、要滑动才行，不是老师要求的显示在一个界面" class="headerlink" title="6、要滑动才行，不是老师要求的显示在一个界面"></a>6、要滑动才行，不是老师要求的显示在一个界面</h3><p><img src="https://s2.loli.net/2023/11/10/aEFgJnowqB1rW95.jpg" alt="img"></p><p><img src="https://s2.loli.net/2023/11/10/8ajhlxpJZbeSI2F.png" alt="img"></p><p>s：<img src="https://gitee.com/jardny/typora_images/raw/master/images/image-20231013100211283.png" alt="image-20231013100211283"></p><p>把linearlayout中的height变为wrap_content</p><p>因为滑动显示是有关高度的参数</p><blockquote><p>wrap_content 尽量缩小为合适的页面</p><p>match_parent 把父页面中找到显示合适的地方</p></blockquote><h2 id="六、Summary"><a href="#六、Summary" class="headerlink" title="六、Summary"></a>六、Summary</h2><p>第一次尝试Android开发，挺有趣但是也挺难，还是有很多不懂，希望后面自己能坚持总结写博客，解决完自己的errors之后有同学来问我，其实也都是这些问题,解决完自己的问题之后，感觉收获很大，印象很深</p><p>希望总结下来，减少大家浪费的时间</p><p>源码地址：<a href="https://gitee.com/jardny/My_AndroidWork">https://gitee.com/jardny/My_AndroidWork</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/15/hello-world/"/>
      <url>/2023/10/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p> <a href="E:\Pictures\Jardny.ico">Jardny.<img src="/">ico</a> E:\Pictures\Jardny.ico</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>标题</title>
      <link href="/2023/08/25/Android%E5%BC%80%E5%8F%91-%E7%B1%BB%E5%BE%AE%E4%BF%A1%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/08/25/Android%E5%BC%80%E5%8F%91-%E7%B1%BB%E5%BE%AE%E4%BF%A1%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Android开发-类微信界面设计（二）"><a href="#Android开发-类微信界面设计（二）" class="headerlink" title="Android开发-类微信界面设计（二）"></a>Android开发-类微信界面设计（二）</h1><h2 id="一、实现效果图"><a href="#一、实现效果图" class="headerlink" title="一、实现效果图"></a>一、实现效果图</h2><p><img src="https://s2.loli.net/2023/11/11/y9lVvK7hra35dwo.png"></p><p><img src="https://s2.loli.net/2023/11/11/1OLqTjzSQmyMfZ8.gif"></p><h2 id="二、功能说明："><a href="#二、功能说明：" class="headerlink" title="二、功能说明："></a>二、功能说明：</h2><p>在上次实验的基础之上把recycleviewb列表完善并且<font color="red">增加点击效果</font>，点击之后可以<font color="red">跳转到另外一个activity上</font>，并且添加返回按钮，可以放回原列表页面，<font color="red">列表中的每一行都对应的不同的数据</font></p><p>故需要实现的功能</p><p>1：activity之间的跳转</p><p>2：数据的绑定</p><h2 id="三、功能实现"><a href="#三、功能实现" class="headerlink" title="三、功能实现"></a>三、功能实现</h2><h3 id="1：列表创建"><a href="#1：列表创建" class="headerlink" title="1：列表创建"></a>1：列表创建</h3><p>涉及到如下xml文件：</p><p><img src="https://s2.loli.net/2023/11/11/Tqp5t1mIEeaVKXc.png"></p><p>需要用到recycleview控件创建列表</p><blockquote><p>recycleview</p></blockquote><p>RecyclerView是Android中用于展示大量数据列表的高级视图组件。它是对ListView的改进和扩展，提供了更灵活、高效的方式来展示和管理大型数据集。</p><p><img src="https://s2.loli.net/2023/11/11/xWJgZ7waBDYiGfO.png"></p><p>recycleview是一个列表，接下来创建行item</p><h4 id="设计item-xml"><a href="#设计item-xml" class="headerlink" title="设计item.xml"></a>设计item.xml</h4><p><img src="https://s2.loli.net/2023/11/11/eZF4Bg9vLNS12R3.png"></p><p>头像+姓名 故添加2个控件</p><p>功能为点击行之后跳转出个人的详情页面 </p><h4 id="details-people-xml设计"><a href="#details-people-xml设计" class="headerlink" title="details_people.xml设计"></a>details_people.xml设计</h4><p>四个控件显示</p><p>1：姓名</p><p>2：电话</p><p>3：地址</p><p>4：朋友圈</p><p>加一个button返回值列表</p><p><img src="https://s2.loli.net/2023/11/11/Sn79qLWkAJVOug4.png"></p><p>显示xml文件设计全部完成，接下来需要连接数据即后端</p><h3 id="2：连接数据"><a href="#2：连接数据" class="headerlink" title="2：连接数据"></a>2：连接数据</h3><h4 id="存储数据"><a href="#存储数据" class="headerlink" title="存储数据"></a>存储数据</h4><p>往列表里面传入数据，先要创建数据源，在fragment1.java里创建list列表进行数据存储</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Map&lt;String,Object&gt;&gt; items=new ArrayList&lt;Map&lt;String,Object&gt;&gt;();</span><br></pre></td></tr></table></figure><p>创建一个列表，列表的内容为键值对 键的内容为string ，值的内容为任意类型</p><p>每一个map对象都是一个联系人，里面存储着ta的信息</p><p>&#x3D;&#x3D;通过for循环存入数据&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">for(int i=0;i&lt;names.length;i++)&#123;</span><br><span class="line">           Map&lt;String,Object&gt; item=new HashMap&lt;String, Object&gt;();</span><br><span class="line">           item.put(&quot;i_name&quot;,names[i]);</span><br><span class="line">           item.put(&quot;i_image&quot;,images[i]);</span><br><span class="line">           item.put(&quot;i_phone&quot;,phones[i]);</span><br><span class="line">           item.put(&quot;i_region&quot;,regions[i]);</span><br><span class="line">           item.put(&quot;i_tag&quot;,tags[i]);</span><br><span class="line">           items.add(item);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>数据传入之后进行连接，把数据导入进列表</p><p>需要用到adapter</p><h4 id="绑定数据"><a href="#绑定数据" class="headerlink" title="绑定数据"></a>绑定数据</h4><blockquote><p>Adapter</p></blockquote><p>是数据源和视图之间的桥梁，把数据绑定到item里</p><p>里面有一个叫<font color="red">Holder的类</font>，和一个<font color="red">onBindViewHolder</font>的方法</p><blockquote><p>Holder</p></blockquote><p>在Adapter中，holder用于绑定视图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public class Myholder extends RecyclerView.ViewHolder&#123;</span><br><span class="line"></span><br><span class="line">       public ImageView imageView;</span><br><span class="line">       TextView textView;</span><br><span class="line"></span><br><span class="line">       public Myholder(@NonNull View itemView) &#123;</span><br><span class="line">           super(itemView);</span><br><span class="line">           textView=itemView.findViewById(R.id.name);//引用item.xml里id为textView1的textView作为Myholder这个类中</span><br><span class="line">           imageView = (ImageView) itemView.findViewById(R.id.image);</span><br><span class="line">           //textView对象的初始值</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>如上：这个holder类绑定了item.xml的控件image和textview（他们的id分别是image和name）</p><p><img src="https://s2.loli.net/2023/11/11/mAD5G4wZWSBd9iz.png" alt="image-20231111153328419"></p><blockquote><p>onBindViewHolder</p></blockquote><p>这个方法是把数据集中的数据绑定到控件中</p><ul><li>1：数据绑定</li></ul><p>name通过list位置position的不同自动获取不同的数据（position会自动变化）</p><p><img src="https://s2.loli.net/2023/11/11/G8M3bcE4Q1gjhfO.png" alt="image-20231111153911926"></p><ul><li>2：设置跳转事件</li></ul><p>当点击textview控件也就是我们的name时，这个onclick函数就会响应</p><p>这里有一个intent类</p><blockquote><p>Intent</p></blockquote><p>Intent用于组件之间的通信和交互可以启动其他的activity，service，broadcastRecever等组件</p><p>可以</p><ol><li>启动组件：通过创建一个Intent对象并指定要启动的组件的类名或动作，可以启动其他应用程序中的Activity、Service或BroadcastReceiver组件。例如，你可以使用Intent启动一个新的Activity来显示一个新的界面。</li><li>传递数据：Intent可以携带数据，以便在组件之间进行传递。你可以使用<code>putExtra()</code>方法将额外的数据附加到Intent中，然后在目标组件中使用<code>getXXXExtra()</code>方法获取这些数据。数据可以是基本类型（如字符串、整数等），也可以是复杂的对象。</li><li>发送广播：通过创建一个Intent并指定广播的动作，你可以发送广播消息，使得其他应用程序中的BroadcastReceiver组件可以接收并处理该广播。广播可以用于应用程序内部的通信，也可以用于应用程序间的通信。</li><li>打开系统功能：Intent可以用于打开系统功能，如拨打电话、发送短信、打开浏览器等。系统会根据Intent的内容选择合适的应用程序来处理请求。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">holder.textView.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">          @Override</span><br><span class="line">          public void onClick(View v) &#123;</span><br><span class="line">              //点击后跳转到联系人详情页</span><br><span class="line">              Intent intent=new Intent(context1,Activitypeople.class);</span><br><span class="line">              //向intent传值</span><br><span class="line">              intent.putExtra(&quot;details&quot;,name);</span><br><span class="line">              intent.putExtra(&quot;image&quot;,image);</span><br><span class="line">              intent.putExtra(&quot;phone&quot;,phone);</span><br><span class="line">              intent.putExtra(&quot;region&quot;,region);</span><br><span class="line">              intent.putExtra(&quot;tag&quot;,tag);</span><br><span class="line">              intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">              //开始跳转</span><br><span class="line">              context1.startActivity(intent);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure><p>这段代码就用了intent的2个功能</p><p>1：启动组件，当点击name时，从本组件跳到了activitypeople这个组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Intent intent=new Intent(context1,Activitypeople.class);</span><br></pre></td></tr></table></figure><p>2：数据传送，把detail，image，phone等数据放到了intent这个对象里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">intent.putExtra(&quot;details&quot;,name);</span><br><span class="line">                intent.putExtra(&quot;image&quot;,image);</span><br><span class="line">                intent.putExtra(&quot;phone&quot;,phone);</span><br><span class="line">                intent.putExtra(&quot;region&quot;,region);</span><br><span class="line">                intent.putExtra(&quot;tag&quot;,tag);</span><br></pre></td></tr></table></figure><p>最后从Madapter.java跳转至ActivityPeople.java</p><p>这是一个activity 连接着details_people.xml</p><p>也就是一个item对应的一个people的详情页面</p><p>details_people.xml的效果图如下：</p><p><img src="https://s2.loli.net/2023/11/11/OKGtkQsISo2glb7.png"></p><p>故ActivityPeople.java中要对这个效果进行数据的绑定展示，相当数据库后端</p><ul><li>与xml文件绑定</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">super.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.details_people);</span><br></pre></td></tr></table></figure><ul><li>创建xml效果有的控件：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TextView dName,textView1,textView2;</span><br><span class="line"> ImageView dImage,aImage,cImage,pImage;</span><br><span class="line"> Button button_r;</span><br><span class="line"> View view;</span><br></pre></td></tr></table></figure><ul><li>绑定控件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dName=findViewById(R.id.dname);</span><br><span class="line">dImage=findViewById(R.id.imagename);</span><br><span class="line">aImage=findViewById(R.id.imageadd);</span><br><span class="line">cImage=findViewById(R.id.imagecircle);</span><br><span class="line">pImage=findViewById(R.id.imagephone);</span><br><span class="line">textView1=findViewById(R.id.dphone);</span><br><span class="line">textView2=findViewById(R.id.dadd);</span><br></pre></td></tr></table></figure><ul><li>获取从上一个activity传递过来的带有数据的intent类</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//获取上一个Actvity传过来的intent</span><br><span class="line">Intent intent=getIntent();</span><br></pre></td></tr></table></figure><ul><li>设置控件获取数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dImage.setImageResource(intent.getIntExtra(&quot;image&quot;,R.drawable.baba));</span><br><span class="line">dName.setText(intent.getStringExtra(&quot;details&quot;));</span><br><span class="line">aImage.setImageResource(R.drawable.weizhi);</span><br><span class="line">cImage.setImageResource(R.drawable.circle);</span><br><span class="line">pImage.setImageResource(R.drawable.dianhua);</span><br><span class="line">textView1.setText(intent.getStringExtra(&quot;phone&quot;));</span><br><span class="line">textView2.setText(intent.getStringExtra(&quot;region&quot;));</span><br></pre></td></tr></table></figure><ul><li>button实现返回到原来的activity效果</li></ul><p>跳转到原来的Fragment1页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">button_r.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View view) &#123;</span><br><span class="line">                Intent intent1=new Intent(Activitypeople.this, MainActivity.class);</span><br><span class="line">                startActivity(intent1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><blockquote><p><font color="red">startActivity</font></p></blockquote><p>通过调用<code>startActivity()</code>方法，你可以向系统发出请求，以启动另一个Activity并在屏幕上显示相应的界面。</p><p>这种启动是<font color="red">没有返回值的</font></p><p>如果要有放回值的启动需要用到launch的启动</p><h2 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h2><p>问题：</p><h3 id="q1：详情页面效果时，地址、朋友圈等图像无法显示"><a href="#q1：详情页面效果时，地址、朋友圈等图像无法显示" class="headerlink" title="q1：详情页面效果时，地址、朋友圈等图像无法显示"></a>q1：详情页面效果时，地址、朋友圈等图像无法显示</h3><p><img src="https://s2.loli.net/2023/11/11/2F6qrMnysuROEBl.png"></p><p>因为这些image都是固定的，而不是根据position变化而变化的，上网查找发现在<code>onBindViewHolder()</code>方法中，为ImageView设置固定图像资源时，不使用<code>position</code>参数获取列表项的位置对应的图像资源，而是直接定义获取图像资源如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cImage=findViewById(R.id.imagecircle);</span><br><span class="line">cImage.setImageResource(R.drawable.circle);</span><br></pre></td></tr></table></figure><p>而根据position变化而变的图像、文字连接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dName=findViewById(R.id.dname);</span><br><span class="line">dName.setText(intent.getStringExtra(&quot;details&quot;));</span><br></pre></td></tr></table></figure><h3 id="q2：效果显示时地址无法显示"><a href="#q2：效果显示时地址无法显示" class="headerlink" title="q2：效果显示时地址无法显示"></a>q2：效果显示时地址无法显示</h3><p><img src="https://s2.loli.net/2023/11/11/Ah2t1qNiyW4fmFV.png"></p><p>查看代码后发现 绑定数据时region单词拼写错误，导致地址数据无法绑定完成</p><p><img src="https://s2.loli.net/2023/11/11/Y4pCusEtAQyzNmI.png"></p><p><img src="https://s2.loli.net/2023/11/11/Kx5UuG8WhNp3str.png"></p><h3 id="q3：网上无法找到大小一致的图片"><a href="#q3：网上无法找到大小一致的图片" class="headerlink" title="q3：网上无法找到大小一致的图片"></a>q3：网上无法找到大小一致的图片</h3><p>前期使用的是网上随便找的图片，导致设计xml文件时，格式无法控制，效果显示不佳</p><p><img src="https://s2.loli.net/2023/11/11/8xE6rqziuG3nlRI.png"></p><p>后面询问同学得知可以在<a href="https://www.iconfont.cn/collections/index?spm=a313x.home_index.i1.1.58a33a81f2mOyh&page=4">iconfont-阿里巴巴矢量图标库</a>内进行图标选取，这个库里面的图大小基本一致并且数量种类丰富，可以免费使用</p><p>android开发对于我来说是一种全新的体验，遇到的困难很多，同时带来的锻炼也是巨大的，收益匪浅，通过一个个解决困难的过程，感觉到了自己在一步步成长</p><p>源码地址：<a href="https://gitee.com/jardny/My_AndroidWork">https://gitee.com/jardny/My_AndroidWork</a></p>]]></content>
      
      
      <categories>
          
          <category> 分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签1 </tag>
            
            <tag> 标签2 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
